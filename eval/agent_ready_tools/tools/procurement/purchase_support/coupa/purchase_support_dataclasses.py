from dataclasses import field
from typing import List, Optional

from pydantic.dataclasses import dataclass


@dataclass
class CoupaAddress:
    """Represents a shipping address for a purchase order in Coupa."""

    id: int
    location_code: Optional[str]
    street1: str
    city: str
    state: Optional[str]
    postal_code: str
    country: str


@dataclass
class CoupaAddressList:
    """Represent the list of addresses in Coupa."""

    address_list: List[CoupaAddress]


@dataclass
class CoupaApprover:
    """Represents an approver in Coupa."""

    approver_id: int
    approver_login: str
    approver_fullname: str


@dataclass
class CoupaApproval:
    """Represents an approval in Coupa."""

    approval_id: int
    created_at: str
    updated_at: str
    status: str
    approval_date: Optional[str]
    approvable_type: str
    approver_type: str
    approvable_id: int
    approver: Optional[CoupaApprover]
    approved_by: Optional[CoupaApprover]


@dataclass
class CoupaApprovalList:
    """Represents the list of approvals in Coupa."""

    approval_list: List[CoupaApproval]


@dataclass
class CoupaRequisitionLine:
    """Represents a requisition line item in Coupa."""

    id: int
    # NOTE: technically required, but rare edge cases in sandbox data suggest it can be None
    description: Optional[str]
    unit_price: float
    currency: str
    line_type: str  # "RequisitionAmountLine" or "RequisitionQuantityLine"
    line_num: int  # auto-assigned
    total_with_estimated_tax: str
    item_id: Optional[int] = None  # if using an item directly from catalog
    item_name: Optional[str] = None
    item_description: Optional[str] = None
    item_number: Optional[str] = None
    item_manufacturer_name: Optional[str] = None
    item_manufacturer_part_number: Optional[str] = None
    supplier_id: Optional[int] = None  # not required for req line to exist
    billing_account_id: Optional[int] = None  # not required for req line to exist
    # NOTE: EXTRA FIELDS THAT EXIST FOR ONLY QUANTITY LINE TYPE
    quantity: Optional[str] = None  # not required for req line to exist
    uom: Optional[str] = None
    # NOTE: EXTRA GENERAL FIELDS
    commodity: Optional[str] = None
    supplier_part_number: Optional[str] = None
    shipping_terms: Optional[str] = None
    payment_terms: Optional[str] = None
    need_by_date: Optional[str] = None
    transmission_method: Optional[str] = None
    manufacturer_name: Optional[str] = None
    manufacturer_part_number: Optional[str] = None
    # NOTE: FIELDS THAT DON'T EXIST
    # pcard
    # smart release
    # backing document
    # savings percent


@dataclass
class CoupaRequisition:
    """Represents a requisition in Coupa."""

    id: int
    created_at: str
    updated_at: str
    created_by: str
    updated_by: str
    requested_by: str
    status: str
    currency: str
    line_count: int  # good to have if using line_num in requisition line
    total_with_estimated_tax: str
    need_by_date: Optional[str] = None
    business_unit: Optional[str] = None
    business_purpose: Optional[str] = None
    ship_to_address: Optional[CoupaAddress] = None
    ship_to_attention: Optional[str] = None
    # current approval is one approval that swaps to the next valid approval in the approval list after it gets approved
    current_approval: Optional[CoupaApproval] = None  # gets autogenerated after submission
    # approval id list lists all approvals in the chain including already approved approvals
    approval_id_list: Optional[list[int]] = None  # gets autogenerated after submission
    requisition_lines: list[CoupaRequisitionLine] = field(default_factory=list)


@dataclass
class CoupaRequisitionList:
    """Represents a list of requisitions in Coupa."""

    requisition_list: List[CoupaRequisition]


@dataclass
class CoupaCreateRequisitionResponse:
    """Represents the response from creating a purchase request (requisition) in Coupa."""

    requisition_id: int


@dataclass
class CoupaComment:
    """Represents a comment in Coupa."""

    comment_id: int
    created_at: str
    updated_at: str
    commentable_id: int  # the requisition or purchase order id
    commentable_type: str  # RequisitionHeader, OrderHeader
    comment_text: str
    created_by: str
    updated_by: str


@dataclass
class CoupaCommentList:
    """Represents the list of comments in Coupa."""

    comment_list: List[CoupaComment]


@dataclass
class CoupaOrderLine:
    """Represents an individual order line for a purchase order in Coupa."""

    order_line_id: int
    order_line_description: str
    order_line_type: str  # "type": "OrderAmountLine",
    order_line_num: str  # "line-num": "1",
    item_description: Optional[str]
    quantity: Optional[str]
    unit: Optional[str]
    price: str
    total: str
    account_id: int
    account_type_id: int
    uom_code: str
    estimated_tax_amount: str
    total_with_estimated_tax: str
    amount_received: float  # "received": "0.00",
    receipt_approval_required: bool  # "receipt-approval-required": false,
    supplier_part_number: Optional[str]
    supplier_auxiliary_part_number: Optional[str]  # "supp-aux-part-num": null,
    commodity: Optional[str]
    manufacturer_name: Optional[str]
    manufacturer_part_number: Optional[str]
    need_by_date: Optional[str] = None
    savings_percent: Optional[str] = None  # "savings-pct": "33.0",
    billing_account_id: Optional[int] = None
    period: Optional[str] = None
    # UNABLE TO FIND
    # approved_invoiced: float
    # pending_invoiced: float
    # total_invoiced: float


@dataclass
class CoupaOrderLines:
    """Represents the list of order lines for a purchase order in Coupa."""

    order_lines: List[CoupaOrderLine]


@dataclass
class CoupaPurchaseOrder:
    """Represents a purchase order in Coupa."""

    purchase_order_id: int
    po_number: str
    created_by: str
    updated_by: str
    created_at: str
    updated_at: str
    status: str
    transmission_status: str
    exported: bool
    ship_to_attention: str
    requested_by: str  # fullname
    payment_method: str
    currency: str
    estimated_tax_amount: str
    total_with_estimated_tax: str
    requisition_number: int
    shipping_address: CoupaAddress
    supplier_id: int
    supplier_name: str
    requisition: CoupaRequisition
    order_lines: CoupaOrderLines
    shipping_terms: Optional[str] = None
    payment_terms: Optional[str] = None
    department: Optional[str] = None


@dataclass
class CoupaPurchaseOrderList:
    """Represents a list of purchase orders in Coupa."""

    purchase_order_list: List[CoupaPurchaseOrder]


@dataclass
class CoupaAccountType:
    """Represents an account type in coupa that is used for purchasing."""

    account_type_id: int
    account_type_name: str
    active: bool
    currency_code: str


@dataclass
class CoupaGetAccountTypesResponse:
    """Represents a list of account types."""

    total_count: int
    account_types: list[CoupaAccountType]


@dataclass
class CoupaAccount:
    """Represents an account in coupa that is used for purchasing."""

    account_id: int
    account_name: str
    account_code: str
    active: bool
    account_type_id: int


@dataclass
class CoupaGetAccountsResponse:
    """Represents a list of accounts."""

    total_count: int
    accounts: list[CoupaAccount]


@dataclass
class CoupaDepartment:
    """Represents a department in Coupa."""

    department_id: int
    department_name: str
    active_status: bool


@dataclass
class CoupaShippingTerms:
    """Represents a shipping term in Coupa."""

    shipping_id: int
    shipping_code: str
    active_status: bool


@dataclass
class CoupaDepartmentList:
    """Represents the list of departments in Coupa."""

    department_list: List[CoupaDepartment]


@dataclass
class CoupaShippingTermsList:
    """Represents the list of shipping term in Coupa."""

    shipping_terms_list: List[CoupaShippingTerms]


@dataclass
class CoupaPaymentTerms:
    """Represent a payment terms in Coupa."""

    payment_id: int
    payment_code: str
    payment_active_status: bool


@dataclass
class CoupaPaymentTermsList:
    """Represent the list of payment terms in Coupa."""

    payment_terms_list: List[CoupaPaymentTerms]
