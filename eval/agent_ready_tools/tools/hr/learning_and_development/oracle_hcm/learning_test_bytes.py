# This file contains the encoded bytes of both specialization and course reports.

SPECIALIZATION_REPORT_BYTES = "77u/UF9MRUFSTklOR19JRCxQX1NUQVRVUyxQX1NUQVJUX0RBVEUsUF9FTkRfREFURSxTVEFUVVMsU1BFQ0lBTElaQVRJT05fTkFNRSxTUEVDSUFMSVpBVElPTl9OVU0sU1BFQ0lBTElaQVRJT05fU0hUX0RFUyxTUEVDSUFMSVpBVElPTl9EQVRFLFNQRUNJQUxJWkFUSU9OX0RFUyxTRUNUSU9OX05BTUUsU0VDVElPTl9OVU1CRVIsU0VDVElPTl9SVUxFLFNFQ1RJT05fU0VRX1JVTEUsQUNUSVZJVElFU19OQU1FLEFDVElWSVRJRVNfTlVNQkVSLFNQTF9FTkRfREFURSxMRUFSTklOR19JVEVNX0lECiwsLCxBY3RpdmUsIkNvcnBvcmF0ZSBDb21wbGlhbmNlIExlYXJuaW5nIixPTEMxMDMwMDMsIlRoaXMgc3BlY2lhbGl6YXRpb24gd2lsbCBlZHVjYXRlIHlvdSBvbiB0aGUgbGF3cywgcmVndWxhdGlvbnMsIGFuZCBpbnRlcm5hbMKgY29ycG9yYXRlwqBwb2xpY2llcyBhbmQgcHJvY2VkdXJlcyB0aGF0IGFwcGx5IHRvIHlvdXIgZGFpbHkgcm9sZXMuIiwwMi8wNS8yMDE3LCJUaGlzIHNwZWNpYWxpemF0aW9uIHdpbGwgZWR1Y2F0ZSB5b3Ugb24gdGhlIGxhd3MsIHJlZ3VsYXRpb25zLCBhbmQgaW50ZXJuYWzCoCBjb3Jwb3JhdGUgwqBwb2xpY2llcyBhbmQgcHJvY2VkdXJlcyB0aGF0IGFwcGx5IHRvIHlvdXIgZGFpbHkgcm9sZXMuIC4uLiBUaGUga2V5IG9iamVjdGl2ZXMgb2bCoCBjb21wbGlhbmNlIHRyYWluaW5nIMKgYXJlIHRvOiBFbnN1cmUgdGhhdCB5b3UgYXJlIGF3YXJlIG9mIHlvdXLCoCBjb21wbGlhbmNlIMKgcmVzcG9uc2liaWxpdGllcy4iLCJBbnRpIEJyaWJlcnkgYW5kIENvcnJ1cHRpb24iLE9MQzEwMDM3NyxBbGwsQW55dGltZSwiQW50aSBDb3JydXB0aW9uIGFuZCBCcmliZXJ5IENvbXBsaWFuY2UiLE9MQzQyMDAzMiwzMS8xMi80NzEyLDMwMDAwMDE0MjQ3ODI5MwosLCwsQWN0aXZlLCJDb3Jwb3JhdGUgQ29tcGxpYW5jZSBMZWFybmluZyIsT0xDMTAzMDAzLCJUaGlzIHNwZWNpYWxpemF0aW9uIHdpbGwgZWR1Y2F0ZSB5b3Ugb24gdGhlIGxhd3MsIHJlZ3VsYXRpb25zLCBhbmQgaW50ZXJuYWzCoGNvcnBvcmF0ZcKgcG9saWNpZXMgYW5kIHByb2NlZHVyZXMgdGhhdCBhcHBseSB0byB5b3VyIGRhaWx5IHJvbGVzLiIsMDIvMDUvMjAxNywiVGhpcyBzcGVjaWFsaXphdGlvbiB3aWxsIGVkdWNhdGUgeW91IG9uIHRoZSBsYXdzLCByZWd1bGF0aW9ucywgYW5kIGludGVybmFswqAgY29ycG9yYXRlIMKgcG9saWNpZXMgYW5kIHByb2NlZHVyZXMgdGhhdCBhcHBseSB0byB5b3VyIGRhaWx5IHJvbGVzLiAuLi4gVGhlIGtleSBvYmplY3RpdmVzIG9mwqAgY29tcGxpYW5jZSB0cmFpbmluZyDCoGFyZSB0bzogRW5zdXJlIHRoYXQgeW91IGFyZSBhd2FyZSBvZiB5b3VywqAgY29tcGxpYW5jZSDCoHJlc3BvbnNpYmlsaXRpZXMuIiwiQW50aSBCcmliZXJ5IGFuZCBDb3JydXB0aW9uIixPTEMxMDAzNzcsQWxsLEFueXRpbWUsIkV0aGljcyBhbmQgWW91IixPTEM0MjAwMzQsMzEvMTIvNDcxMiwzMDAwMDAxNDI0NzgyOTMKLCwsLEFjdGl2ZSwiQ29ycG9yYXRlIENvbXBsaWFuY2UgTGVhcm5pbmciLE9MQzEwMzAwMywiVGhpcyBzcGVjaWFsaXphdGlvbiB3aWxsIGVkdWNhdGUgeW91IG9uIHRoZSBsYXdzLCByZWd1bGF0aW9ucywgYW5kIGludGVybmFswqBjb3Jwb3JhdGXCoHBvbGljaWVzIGFuZCBwcm9jZWR1cmVzIHRoYXQgYXBwbHkgdG8geW91ciBkYWlseSByb2xlcy4iLDAyLzA1LzIwMTcsIlRoaXMgc3BlY2lhbGl6YXRpb24gd2lsbCBlZHVjYXRlIHlvdSBvbiB0aGUgbGF3cywgcmVndWxhdGlvbnMsIGFuZCBpbnRlcm5hbMKgIGNvcnBvcmF0ZSDCoHBvbGljaWVzIGFuZCBwcm9jZWR1cmVzIHRoYXQgYXBwbHkgdG8geW91ciBkYWlseSByb2xlcy4gLi4uIFRoZSBrZXkgb2JqZWN0aXZlcyBvZsKgIGNvbXBsaWFuY2UgdHJhaW5pbmcgwqBhcmUgdG86IEVuc3VyZSB0aGF0IHlvdSBhcmUgYXdhcmUgb2YgeW91csKgIGNvbXBsaWFuY2UgwqByZXNwb25zaWJpbGl0aWVzLiIsIkJ1c2luZXNzIEV0aGljcyIsT0xDMTAwNDIxLEFsbCxBbnl0aW1lLCJCdXNpbmVzcyBDb25kdWN0IixPTEM0MjAwMzksMzEvMTIvNDcxMiwzMDAwMDAxNDI0NzgyOTMKLCwsLEFjdGl2ZSwiQ29ycG9yYXRlIENvbXBsaWFuY2UgTGVhcm5pbmciLE9MQzEwMzAwMywiVGhpcyBzcGVjaWFsaXphdGlvbiB3aWxsIGVkdWNhdGUgeW91IG9uIHRoZSBsYXdzLCByZWd1bGF0aW9ucywgYW5kIGludGVybmFswqBjb3Jwb3JhdGXCoHBvbGljaWVzIGFuZCBwcm9jZWR1cmVzIHRoYXQgYXBwbHkgdG8geW91ciBkYWlseSByb2xlcy4iLDAyLzA1LzIwMTcsIlRoaXMgc3BlY2lhbGl6YXRpb24gd2lsbCBlZHVjYXRlIHlvdSBvbiB0aGUgbGF3cywgcmVndWxhdGlvbnMsIGFuZCBpbnRlcm5hbMKgIGNvcnBvcmF0ZSDCoHBvbGljaWVzIGFuZCBwcm9jZWR1cmVzIHRoYXQgYXBwbHkgdG8geW91ciBkYWlseSByb2xlcy4gLi4uIFRoZSBrZXkgb2JqZWN0aXZlcyBvZsKgIGNvbXBsaWFuY2UgdHJhaW5pbmcgwqBhcmUgdG86IEVuc3VyZSB0aGF0IHlvdSBhcmUgYXdhcmUgb2YgeW91csKgIGNvbXBsaWFuY2UgwqByZXNwb25zaWJpbGl0aWVzLiIsIkRhdGEgU2VjdXJpdHkiLE9MQzEwMDQyNCxBbGwsQW55dGltZSwiSW5mb3JtYXRpb24gUHJvdGVjdGlvbiBBd2FyZW5lc3MiLE9MQzQyMDA0MCwzMS8xMi80NzEyLDMwMDAwMDE0MjQ3ODI5MwosLCwsQWN0aXZlLCJDb3Jwb3JhdGUgQ29tcGxpYW5jZSBMZWFybmluZyIsT0xDMTAzMDAzLCJUaGlzIHNwZWNpYWxpemF0aW9uIHdpbGwgZWR1Y2F0ZSB5b3Ugb24gdGhlIGxhd3MsIHJlZ3VsYXRpb25zLCBhbmQgaW50ZXJuYWzCoGNvcnBvcmF0ZcKgcG9saWNpZXMgYW5kIHByb2NlZHVyZXMgdGhhdCBhcHBseSB0byB5b3VyIGRhaWx5IHJvbGVzLiIsMDIvMDUvMjAxNywiVGhpcyBzcGVjaWFsaXphdGlvbiB3aWxsIGVkdWNhdGUgeW91IG9uIHRoZSBsYXdzLCByZWd1bGF0aW9ucywgYW5kIGludGVybmFswqAgY29ycG9yYXRlIMKgcG9saWNpZXMgYW5kIHByb2NlZHVyZXMgdGhhdCBhcHBseSB0byB5b3VyIGRhaWx5IHJvbGVzLiAuLi4gVGhlIGtleSBvYmplY3RpdmVzIG9mwqAgY29tcGxpYW5jZSB0cmFpbmluZyDCoGFyZSB0bzogRW5zdXJlIHRoYXQgeW91IGFyZSBhd2FyZSBvZiB5b3VywqAgY29tcGxpYW5jZSDCoHJlc3BvbnNpYmlsaXRpZXMuIiwiU2V4dWFsIEhhcmFzc21lbnQgaW4gdGhlIFdvcmtwbGFjZSIsT0xDMTAwMzc4LEFsbCxBbnl0aW1lLCJTZXh1YWwgSGFyYXNzbWVudCBUcmFpbmluZyBmb3IgdGhlIE1vZGVybiBXb3JrcGxhY2UiLE9MQzQyMDA0MiwzMS8xMi80NzEyLDMwMDAwMDE0MjQ3ODI5MwosLCwsQWN0aXZlLCJDdXN0b21lciBTZXJ2aWNlIFN1cGVyc3RhcnMiLE9MQzE5Nzk0NSwiTG9va2luZyB0byBkZWxpZ2h0IHlvdXIgY3VzdG9tZXJzLCBidWlsZCB5b3VyIG9yZ2FuaXphdGlvbuKAmXMgcmVwdXRhdGlvbiBhbmQgaGVscCBpdCB0byBzdGFuZCBvdXQgZnJvbSBjb21wZXRpdG9ycz8gQWxsIHRoaXMsIGFuZCBtb3JlLCBpcyBjb3ZlcmVkIGluIHRoaXMgbGVhcm5pbmcgcGF0aCIsMDcvMDUvMjAyMCwiR2V0dGluZyBjdXN0b21lciBzZXJ2aWNlIHJpZ2h0IGhhcyBiZWNvbWUgbW9yZSBpbXBvcnRhbnQgdGhhbiBldmVyIGluIG91ciBoaWdobHkgY29tcGV0aXRpdmUgYW5kIGluY3JlYXNpbmdseSBnbG9iYWwgbWFya2V0cGxhY2UsIGFuZCB0aGlzIGxlYXJuaW5nIGhlbHBzIGdpdmUgeW91IHRoZSB0b29scyB5b3UgbmVlZCB0byBnZXQgaXQgcmlnaHQuIiwiQ3VzdG9tZXIgU2VydmljZSBFeGNlbGxlbmNlIixPTEMxOTc5NDgsQWxsLEFueXRpbWUsIkJ1aWxkaW5nIEN1c3RvbWVyIFJhcHBvcnQiLE9MQzQyMDA2MiwzMS8xMi80NzEyLDMwMDAwMDIwMTkxODk0MQosLCwsQWN0aXZlLCJDdXN0b21lciBTZXJ2aWNlIFN1cGVyc3RhcnMiLE9MQzE5Nzk0NSwiTG9va2luZyB0byBkZWxpZ2h0IHlvdXIgY3VzdG9tZXJzLCBidWlsZCB5b3VyIG9yZ2FuaXphdGlvbuKAmXMgcmVwdXRhdGlvbiBhbmQgaGVscCBpdCB0byBzdGFuZCBvdXQgZnJvbSBjb21wZXRpdG9ycz8gQWxsIHRoaXMsIGFuZCBtb3JlLCBpcyBjb3ZlcmVkIGluIHRoaXMgbGVhcm5pbmcgcGF0aCIsMDcvMDUvMjAyMCwiR2V0dGluZyBjdXN0b21lciBzZXJ2aWNlIHJpZ2h0IGhhcyBiZWNvbWUgbW9yZSBpbXBvcnRhbnQgdGhhbiBldmVyIGluIG91ciBoaWdobHkgY29tcGV0aXRpdmUgYW5kIGluY3JlYXNpbmdseSBnbG9iYWwgbWFya2V0cGxhY2UsIGFuZCB0aGlzIGxlYXJuaW5nIGhlbHBzIGdpdmUgeW91IHRoZSB0b29scyB5b3UgbmVlZCB0byBnZXQgaXQgcmlnaHQuIiwiQ3VzdG9tZXIgU2VydmljZSBFeGNlbGxlbmNlIixPTEMxOTc5NDgsQWxsLEFueXRpbWUsIktleSB0byBDdXN0b21lciBTZXJ2aWNlIFN1Y2Nlc3MiLE9MQzQyMDA3MSwzMS8xMi80NzEyLDMwMDAwMDIwMTkxODk0MQosLCwsQWN0aXZlLCJFc3NlbnRpYWwgV29ya2VyIixPTEMxOTc5NjYsIlRyYWluaW5nIGZvciBFc3NlbnRpYWwgV29ya2VycyBvbiBob3cgdG8gcmVzcG9uZCB0byBhIHBhbmRlbWljLCBnYWluIG1vcmUga25vd2xlZGdlIG9uIGltcG9ydGFudCB0b3BpY3MgYW5kIHRyZW5kcywgYW5kIHN0YXkgc2FmZSBpbiB0aGUgcHJhY3RpY2Ugb2YgY2Fycnlpbmcgb3V0IHRoZWlyIHdvcmsuIiwwOC8wNS8yMDIwLCJUaGUgZm9sbG93aW5nIHNwZWNpYWxpemF0aW9uIHByb3ZpZGVzIHRyYWluaW5nIGFuZCBndWlkYW5jZSBmb3IgZW1wbG95ZWVzIHdpdGhpbiB0aGUgb3JnYW5pemF0aW9uIHRoYXQgYXJlIGNvbnNpZGVyZWQgRXNzZW50aWFsIFdvcmtlcnMsIGFuZCBpbnN0cnVjdHMgaW5kaXZpZHVhbHMgb24gaG93IHRvwqBxdWlja2x5IHJlc3BvbmQgdG8gYSBnbG9iYWwgUGFuZGVtaWMsIGJlY29tZSBtb3JlIGtub3dsZWRnZWFibGUgb24gaW1wb3J0YW50IHRvcGljcyBhbmQgdHJlbmRzLCBhbmQgc3RheSBzYWZlIGluIHRoZSBwcmFjdGljZSBvZiBjYXJyeWluZyBvdXQgdGhlaXIgd29yay4iLCJQcmFjdGljZXMgYW5kIEd1aWRlbGluZXMiLE9MQzE5Nzk3MCxBbGwsQW55dGltZSwiSGVhbHRoIGFuZCBTYWZldHkgaW4gdGhlIE9mZmljZSIsT0xDNDIwMDY5LDMxLzEyLzQ3MTIsMzAwMDAwMjAxOTE5MDY1CiwsLCxBY3RpdmUsIkVzc2VudGlhbCBXb3JrZXIiLE9MQzE5Nzk2NiwiVHJhaW5pbmcgZm9yIEVzc2VudGlhbCBXb3JrZXJzIG9uIGhvdyB0byByZXNwb25kIHRvIGEgcGFuZGVtaWMsIGdhaW4gbW9yZSBrbm93bGVkZ2Ugb24gaW1wb3J0YW50IHRvcGljcyBhbmQgdHJlbmRzLCBhbmQgc3RheSBzYWZlIGluIHRoZSBwcmFjdGljZSBvZiBjYXJyeWluZyBvdXQgdGhlaXIgd29yay4iLDA4LzA1LzIwMjAsIlRoZSBmb2xsb3dpbmcgc3BlY2lhbGl6YXRpb24gcHJvdmlkZXMgdHJhaW5pbmcgYW5kIGd1aWRhbmNlIGZvciBlbXBsb3llZXMgd2l0aGluIHRoZSBvcmdhbml6YXRpb24gdGhhdCBhcmUgY29uc2lkZXJlZCBFc3NlbnRpYWwgV29ya2VycywgYW5kIGluc3RydWN0cyBpbmRpdmlkdWFscyBvbiBob3cgdG/CoHF1aWNrbHkgcmVzcG9uZCB0byBhIGdsb2JhbCBQYW5kZW1pYywgYmVjb21lIG1vcmUga25vd2xlZGdlYWJsZSBvbiBpbXBvcnRhbnQgdG9waWNzIGFuZCB0cmVuZHMsIGFuZCBzdGF5IHNhZmUgaW4gdGhlIHByYWN0aWNlIG9mIGNhcnJ5aW5nIG91dCB0aGVpciB3b3JrLiIsIlByYWN0aWNlcyBhbmQgR3VpZGVsaW5lcyIsT0xDMTk3OTcwLEFsbCxBbnl0aW1lLCJJbmZlY3Rpb24gQ29udHJvbCIsT0xDNDIwMDY4LDMxLzEyLzQ3MTIsMzAwMDAwMjAxOTE5MDY1CiwsLCxBY3RpdmUsIkVzc2VudGlhbCBXb3JrZXIiLE9MQzE5Nzk2NiwiVHJhaW5pbmcgZm9yIEVzc2VudGlhbCBXb3JrZXJzIG9uIGhvdyB0byByZXNwb25kIHRvIGEgcGFuZGVtaWMsIGdhaW4gbW9yZSBrbm93bGVkZ2Ugb24gaW1wb3J0YW50IHRvcGljcyBhbmQgdHJlbmRzLCBhbmQgc3RheSBzYWZlIGluIHRoZSBwcmFjdGljZSBvZiBjYXJyeWluZyBvdXQgdGhlaXIgd29yay4iLDA4LzA1LzIwMjAsIlRoZSBmb2xsb3dpbmcgc3BlY2lhbGl6YXRpb24gcHJvdmlkZXMgdHJhaW5pbmcgYW5kIGd1aWRhbmNlIGZvciBlbXBsb3llZXMgd2l0aGluIHRoZSBvcmdhbml6YXRpb24gdGhhdCBhcmUgY29uc2lkZXJlZCBFc3NlbnRpYWwgV29ya2VycywgYW5kIGluc3RydWN0cyBpbmRpdmlkdWFscyBvbiBob3cgdG/CoHF1aWNrbHkgcmVzcG9uZCB0byBhIGdsb2JhbCBQYW5kZW1pYywgYmVjb21lIG1vcmUga25vd2xlZGdlYWJsZSBvbiBpbXBvcnRhbnQgdG9waWNzIGFuZCB0cmVuZHMsIGFuZCBzdGF5IHNhZmUgaW4gdGhlIHByYWN0aWNlIG9mIGNhcnJ5aW5nIG91dCB0aGVpciB3b3JrLiIsIlByYWN0aWNlcyBhbmQgR3VpZGVsaW5lcyIsT0xDMTk3OTcwLEFsbCxBbnl0aW1lLCJQbGFubmluZyBGb3IgQSBQYW5kZW1pYyAtIElkZW50aWZ5aW5nIFN5bXB0b21zIEFuZCBXaGVuIFRvIFN0YXkgSG9tZSIsT0xDNDIwMDY3LDMxLzEyLzQ3MTIsMzAwMDAwMjAxOTE5MDY1CiwsLCxBY3RpdmUsIkVzc2VudGlhbCBXb3JrZXIiLE9MQzE5Nzk2NiwiVHJhaW5pbmcgZm9yIEVzc2VudGlhbCBXb3JrZXJzIG9uIGhvdyB0byByZXNwb25kIHRvIGEgcGFuZGVtaWMsIGdhaW4gbW9yZSBrbm93bGVkZ2Ugb24gaW1wb3J0YW50IHRvcGljcyBhbmQgdHJlbmRzLCBhbmQgc3RheSBzYWZlIGluIHRoZSBwcmFjdGljZSBvZiBjYXJyeWluZyBvdXQgdGhlaXIgd29yay4iLDA4LzA1LzIwMjAsIlRoZSBmb2xsb3dpbmcgc3BlY2lhbGl6YXRpb24gcHJvdmlkZXMgdHJhaW5pbmcgYW5kIGd1aWRhbmNlIGZvciBlbXBsb3llZXMgd2l0aGluIHRoZSBvcmdhbml6YXRpb24gdGhhdCBhcmUgY29uc2lkZXJlZCBFc3NlbnRpYWwgV29ya2VycywgYW5kIGluc3RydWN0cyBpbmRpdmlkdWFscyBvbiBob3cgdG/CoHF1aWNrbHkgcmVzcG9uZCB0byBhIGdsb2JhbCBQYW5kZW1pYywgYmVjb21lIG1vcmUga25vd2xlZGdlYWJsZSBvbiBpbXBvcnRhbnQgdG9waWNzIGFuZCB0cmVuZHMsIGFuZCBzdGF5IHNhZmUgaW4gdGhlIHByYWN0aWNlIG9mIGNhcnJ5aW5nIG91dCB0aGVpciB3b3JrLiIsIlByYWN0aWNlcyBhbmQgR3VpZGVsaW5lcyIsT0xDMTk3OTcwLEFsbCxBbnl0aW1lLCJTb2NpYWwgRGlzdGFuY2luZyBpbiB0aGUgV29ya3BsYWNlIGFuZCBIeWdpZW5lIEJlc3QgUHJhY3RpY2VzIixPTEM0MjAwNjYsMzEvMTIvNDcxMiwzMDAwMDAyMDE5MTkwNjUKLCwsLEFjdGl2ZSwiRXNzZW50aWFsIFdvcmtlciIsT0xDMTk3OTY2LCJUcmFpbmluZyBmb3IgRXNzZW50aWFsIFdvcmtlcnMgb24gaG93IHRvIHJlc3BvbmQgdG8gYSBwYW5kZW1pYywgZ2FpbiBtb3JlIGtub3dsZWRnZSBvbiBpbXBvcnRhbnQgdG9waWNzIGFuZCB0cmVuZHMsIGFuZCBzdGF5IHNhZmUgaW4gdGhlIHByYWN0aWNlIG9mIGNhcnJ5aW5nIG91dCB0aGVpciB3b3JrLiIsMDgvMDUvMjAyMCwiVGhlIGZvbGxvd2luZyBzcGVjaWFsaXphdGlvbiBwcm92aWRlcyB0cmFpbmluZyBhbmQgZ3VpZGFuY2UgZm9yIGVtcGxveWVlcyB3aXRoaW4gdGhlIG9yZ2FuaXphdGlvbiB0aGF0IGFyZSBjb25zaWRlcmVkIEVzc2VudGlhbCBXb3JrZXJzLCBhbmQgaW5zdHJ1Y3RzIGluZGl2aWR1YWxzIG9uIGhvdyB0b8KgcXVpY2tseSByZXNwb25kIHRvIGEgZ2xvYmFsIFBhbmRlbWljLCBiZWNvbWUgbW9yZSBrbm93bGVkZ2VhYmxlIG9uIGltcG9ydGFudCB0b3BpY3MgYW5kIHRyZW5kcywgYW5kIHN0YXkgc2FmZSBpbiB0aGUgcHJhY3RpY2Ugb2YgY2Fycnlpbmcgb3V0IHRoZWlyIHdvcmsuIixSZXNvdXJjZXMsT0xDMTk3OTcxLDAsQW55dGltZSwiQ29tcGFueSBQYW5kZW1pYyBBd2FyZW5lc3MgUmVzb3VyY2UgUGFnZSIsT0xDNDIwMDcwLDMxLzEyLzQ3MTIsMzAwMDAwMjAxOTE5MDY1CiwsLCxBY3RpdmUsIkhlYWx0aGNhcmUgTGVhcm5pbmciLE9MQzE4MTkzNywiQSBiYXNlbGluZSBsZWFybmluZyBwYXRoIGZvciBhbGwgZW1wbG95ZWVzIHdpdGhpbiB0aGUgSGVhbHRoY2FyZSBvcmdhbml6YXRpb24iLDExLzEyLzIwMTksIlRoaXMgc3BlY2lhbGl6YXRpb24gd2lsbCBlZHVjYXRlIHlvdSBvbiB0aGUgbGF3cywgcmVndWxhdGlvbnMsIGFuZCBpbnRlcm5hbCAgIHBvbGljaWVzIGFuZCBwcm9jZWR1cmVzIHRoYXQgYXBwbHkgdG8gdGhlIGRhaWx5IHJvbGVzIG9mIG1vc3QgSGVhbHRoY2FyZSB3b3JrZXJzLiIsIlBhdGllbnQgQWR2b2NhY3kiLE9MQzE4MTkzOSxBbGwsQW55dGltZSwiUGF0aWVudCBDb21tdW5pY2F0aW9uIGFuZCBCdWlsZGluZyBSYXBwb3J0IixPTEM0MjAwNTIsMzEvMTIvNDcxMiwzMDAwMDAxOTA5ODE0MzcKLCwsLEFjdGl2ZSwiSGVhbHRoY2FyZSBMZWFybmluZyIsT0xDMTgxOTM3LCJBIGJhc2VsaW5lIGxlYXJuaW5nIHBhdGggZm9yIGFsbCBlbXBsb3llZXMgd2l0aGluIHRoZSBIZWFsdGhjYXJlIG9yZ2FuaXphdGlvbiIsMTEvMTIvMjAxOSwiVGhpcyBzcGVjaWFsaXphdGlvbiB3aWxsIGVkdWNhdGUgeW91IG9uIHRoZSBsYXdzLCByZWd1bGF0aW9ucywgYW5kIGludGVybmFsICAgcG9saWNpZXMgYW5kIHByb2NlZHVyZXMgdGhhdCBhcHBseSB0byB0aGUgZGFpbHkgcm9sZXMgb2YgbW9zdCBIZWFsdGhjYXJlIHdvcmtlcnMuIiwiUGF0aWVudCBBZHZvY2FjeSIsT0xDMTgxOTM5LEFsbCxBbnl0aW1lLCJQYXRpZW50IFJpZ2h0cyBhbmQgUmVzcG9uc2liaWxpdGllcyIsT0xDNDIwMDQ5LDMxLzEyLzQ3MTIsMzAwMDAwMTkwOTgxNDM3CiwsLCxBY3RpdmUsIkhlYWx0aGNhcmUgTGVhcm5pbmciLE9MQzE4MTkzNywiQSBiYXNlbGluZSBsZWFybmluZyBwYXRoIGZvciBhbGwgZW1wbG95ZWVzIHdpdGhpbiB0aGUgSGVhbHRoY2FyZSBvcmdhbml6YXRpb24iLDExLzEyLzIwMTksIlRoaXMgc3BlY2lhbGl6YXRpb24gd2lsbCBlZHVjYXRlIHlvdSBvbiB0aGUgbGF3cywgcmVndWxhdGlvbnMsIGFuZCBpbnRlcm5hbCAgIHBvbGljaWVzIGFuZCBwcm9jZWR1cmVzIHRoYXQgYXBwbHkgdG8gdGhlIGRhaWx5IHJvbGVzIG9mIG1vc3QgSGVhbHRoY2FyZSB3b3JrZXJzLiIsIlJlZ3VsYXRvcnkgQ29tcGxpYW5jZSIsT0xDMTgxOTM4LEFsbCxBbnl0aW1lLCJQcmV2ZW50aW5nIERpc2NyaW1pbmF0aW9uIGFuZCBIYXJhc3NtZW50IGZvciBIZWFsdGhjYXJlIEVtcGxveWVlcyIsT0xDNDIwMDQ3LDMxLzEyLzQ3MTIsMzAwMDAwMTkwOTgxNDM3CiwsLCxBY3RpdmUsIkhlYWx0aGNhcmUgTGVhcm5pbmciLE9MQzE4MTkzNywiQSBiYXNlbGluZSBsZWFybmluZyBwYXRoIGZvciBhbGwgZW1wbG95ZWVzIHdpdGhpbiB0aGUgSGVhbHRoY2FyZSBvcmdhbml6YXRpb24iLDExLzEyLzIwMTksIlRoaXMgc3BlY2lhbGl6YXRpb24gd2lsbCBlZHVjYXRlIHlvdSBvbiB0aGUgbGF3cywgcmVndWxhdGlvbnMsIGFuZCBpbnRlcm5hbCAgIHBvbGljaWVzIGFuZCBwcm9jZWR1cmVzIHRoYXQgYXBwbHkgdG8gdGhlIGRhaWx5IHJvbGVzIG9mIG1vc3QgSGVhbHRoY2FyZSB3b3JrZXJzLiIsIlJlZ3VsYXRvcnkgQ29tcGxpYW5jZSIsT0xDMTgxOTM4LEFsbCxBbnl0aW1lLCJSZWd1bGF0b3J5IENvbXBsaWFuY2UgZm9yIEhlYWx0aGNhcmUgUHJvZmVzc2lvbmFscwkiLE9MQzQyMDA0OCwzMS8xMi80NzEyLDMwMDAwMDE5MDk4MTQzNwosLCwsQWN0aXZlLCJIZWFsdGhjYXJlIExlYXJuaW5nIixPTEMxODE5MzcsIkEgYmFzZWxpbmUgbGVhcm5pbmcgcGF0aCBmb3IgYWxsIGVtcGxveWVlcyB3aXRoaW4gdGhlIEhlYWx0aGNhcmUgb3JnYW5pemF0aW9uIiwxMS8xMi8yMDE5LCJUaGlzIHNwZWNpYWxpemF0aW9uIHdpbGwgZWR1Y2F0ZSB5b3Ugb24gdGhlIGxhd3MsIHJlZ3VsYXRpb25zLCBhbmQgaW50ZXJuYWwgICBwb2xpY2llcyBhbmQgcHJvY2VkdXJlcyB0aGF0IGFwcGx5IHRvIHRoZSBkYWlseSByb2xlcyBvZiBtb3N0IEhlYWx0aGNhcmUgd29ya2Vycy4iLCJXb3JrcGxhY2UgU2FmdGV5IixPTEMxODE5NDYsQWxsLEFueXRpbWUsIk1lZGljYWwgLSBIYXphcmQgQ29tbXVuaWNhdGlvbiIsT0xDNDIwMDUxLDMxLzEyLzQ3MTIsMzAwMDAwMTkwOTgxNDM3CiwsLCxBY3RpdmUsIkltbWVkaWF0ZSBQb2xpY3kgVXBkYXRlIGZvciBQYW5kZW1pYyIsT0xDMTk1ODg3LCJQYW5kZW1pYyBQb2xpY3kgVXBkYXRlIiwxNC8wNC8yMDIwLCJUaGUgZm9sbG93aW5nIHNwZWNpYWxpemF0aW9uIHByb3ZpZGVzIHRyYWluaW5nIGFuZCBndWlkYW5jZSBmb3IgZW1wbG95ZWVzIHdpdGhpbiB0aGUgb3JnYW5pemF0aW9uIHRvIGluc3RydWN0IGluZGl2aWR1YWxzIG9uIGhvdyB0b8KgcXVpY2tseSByZXNwb25kIHRvIGEgZ2xvYmFsIFBhbmRlbWljIGFuZCBzdGF5IGtub3dsZWRnZWFibGUgb24gaW1wb3J0YW50IHRvcGljcyBhbmQgdHJlbmRzLiIsIkNvbXBhbnkgU3RhdGVtZW50IixPTEMxOTY5MDYsQWxsLEFueXRpbWUsIkNvbXBhbnkgU3RhdGVtZW50IG9uIFBhbmRlbWljIixPTEM0MjAwNTMsMzEvMTIvMjAyMSwzMDAwMDAyMDExNzQyNzIKLCwsLEFjdGl2ZSwiSW1tZWRpYXRlIFBvbGljeSBVcGRhdGUgZm9yIFBhbmRlbWljIixPTEMxOTU4ODcsIlBhbmRlbWljIFBvbGljeSBVcGRhdGUiLDE0LzA0LzIwMjAsIlRoZSBmb2xsb3dpbmcgc3BlY2lhbGl6YXRpb24gcHJvdmlkZXMgdHJhaW5pbmcgYW5kIGd1aWRhbmNlIGZvciBlbXBsb3llZXMgd2l0aGluIHRoZSBvcmdhbml6YXRpb24gdG8gaW5zdHJ1Y3QgaW5kaXZpZHVhbHMgb24gaG93IHRvwqBxdWlja2x5IHJlc3BvbmQgdG8gYSBnbG9iYWwgUGFuZGVtaWMgYW5kIHN0YXkga25vd2xlZGdlYWJsZSBvbiBpbXBvcnRhbnQgdG9waWNzIGFuZCB0cmVuZHMuIiwiUHJhY3RpY2VzIGFuZCBHdWlkZWxpbmVzIixPTEMxOTY5MDcsQWxsLEFueXRpbWUsIkluZmVjdGlvbiBDb250cm9sIixPTEM0MjAwNTcsMzEvMTIvMjAyMSwzMDAwMDAyMDExNzQyNzIKLCwsLEFjdGl2ZSwiSW1tZWRpYXRlIFBvbGljeSBVcGRhdGUgZm9yIFBhbmRlbWljIixPTEMxOTU4ODcsIlBhbmRlbWljIFBvbGljeSBVcGRhdGUiLDE0LzA0LzIwMjAsIlRoZSBmb2xsb3dpbmcgc3BlY2lhbGl6YXRpb24gcHJvdmlkZXMgdHJhaW5pbmcgYW5kIGd1aWRhbmNlIGZvciBlbXBsb3llZXMgd2l0aGluIHRoZSBvcmdhbml6YXRpb24gdG8gaW5zdHJ1Y3QgaW5kaXZpZHVhbHMgb24gaG93IHRvwqBxdWlja2x5IHJlc3BvbmQgdG8gYSBnbG9iYWwgUGFuZGVtaWMgYW5kIHN0YXkga25vd2xlZGdlYWJsZSBvbiBpbXBvcnRhbnQgdG9waWNzIGFuZCB0cmVuZHMuIiwiUHJhY3RpY2VzIGFuZCBHdWlkZWxpbmVzIixPTEMxOTY5MDcsQWxsLEFueXRpbWUsIlBsYW5uaW5nIEZvciBBIFBhbmRlbWljIC0gSWRlbnRpZnlpbmcgU3ltcHRvbXMgQW5kIFdoZW4gVG8gU3RheSBIb21lIixPTEM0MjAwNTUsMzEvMTIvMjAyMSwzMDAwMDAyMDExNzQyNzIKLCwsLEFjdGl2ZSwiSW1tZWRpYXRlIFBvbGljeSBVcGRhdGUgZm9yIFBhbmRlbWljIixPTEMxOTU4ODcsIlBhbmRlbWljIFBvbGljeSBVcGRhdGUiLDE0LzA0LzIwMjAsIlRoZSBmb2xsb3dpbmcgc3BlY2lhbGl6YXRpb24gcHJvdmlkZXMgdHJhaW5pbmcgYW5kIGd1aWRhbmNlIGZvciBlbXBsb3llZXMgd2l0aGluIHRoZSBvcmdhbml6YXRpb24gdG8gaW5zdHJ1Y3QgaW5kaXZpZHVhbHMgb24gaG93IHRvwqBxdWlja2x5IHJlc3BvbmQgdG8gYSBnbG9iYWwgUGFuZGVtaWMgYW5kIHN0YXkga25vd2xlZGdlYWJsZSBvbiBpbXBvcnRhbnQgdG9waWNzIGFuZCB0cmVuZHMuIiwiUHJhY3RpY2VzIGFuZCBHdWlkZWxpbmVzIixPTEMxOTY5MDcsQWxsLEFueXRpbWUsIlNvY2lhbCBEaXN0YW5jaW5nIGluIHRoZSBXb3JrcGxhY2UgYW5kIEh5Z2llbmUgQmVzdCBQcmFjdGljZXMiLE9MQzQyMDA1NCwzMS8xMi8yMDIxLDMwMDAwMDIwMTE3NDI3MgosLCwsQWN0aXZlLCJJbW1lZGlhdGUgUG9saWN5IFVwZGF0ZSBmb3IgUGFuZGVtaWMiLE9MQzE5NTg4NywiUGFuZGVtaWMgUG9saWN5IFVwZGF0ZSIsMTQvMDQvMjAyMCwiVGhlIGZvbGxvd2luZyBzcGVjaWFsaXphdGlvbiBwcm92aWRlcyB0cmFpbmluZyBhbmQgZ3VpZGFuY2UgZm9yIGVtcGxveWVlcyB3aXRoaW4gdGhlIG9yZ2FuaXphdGlvbiB0byBpbnN0cnVjdCBpbmRpdmlkdWFscyBvbiBob3cgdG/CoHF1aWNrbHkgcmVzcG9uZCB0byBhIGdsb2JhbCBQYW5kZW1pYyBhbmQgc3RheSBrbm93bGVkZ2VhYmxlIG9uIGltcG9ydGFudCB0b3BpY3MgYW5kIHRyZW5kcy4iLFJlc291cmNlcyxPTEMxOTY5MDgsMCxBbnl0aW1lLCJDb21wYW55IFBhbmRlbWljIEF3YXJlbmVzcyBSZXNvdXJjZSBQYWdlIixPTEM0MjAwNTYsMzEvMTIvMjAyMSwzMDAwMDAyMDExNzQyNzIKLCwsLEluYWN0aXZlLExlYWRlcnNoaXAsT0xDMTAxMDAxLCJMZWFybiBlc3NlbnRpYWwgbGVhZGVyc2hpcCBza2lsbHMsIGluY2x1ZGluZyBob3cgdG8gaW5zcGlyZSBhbmQgbW90aXZhdGUgaW5kaXZpZHVhbHMsIG1hbmFnZSB0YWxlbnQsIGluZmx1ZW5jZSB3aXRob3V0IGF1dGhvcml0eSwgYW5kIGxlYWQgdGVhbXMuICIsMzEvMTAvMjAxNiwiSW4gdGhpcyBzcGVjaWFsaXphdGlvbiwgeW91IHdpbGwgbGVhcm4gZXNzZW50aWFsIGxlYWRlcnNoaXAgc2tpbGxzLCBpbmNsdWRpbmcgaG93IHRvIGluc3BpcmUgYW5kIG1vdGl2YXRlIGluZGl2aWR1YWxzLCBtYW5hZ2UgdGFsZW50LCBpbmZsdWVuY2Ugd2l0aG91dCBhdXRob3JpdHksIGFuZCBsZWFkIHRlYW1zLiBJbiBldmVyeSBjb3Vyc2UsIHlvdSB3aWxsIGhhdmUgYW4gb3Bwb3J0dW5pdHkgdG8gYXBwbHkgbmV3IGxlYWRlcnNoaXAgc2tpbGxzIGJ5IHdvcmtpbmcgdGhyb3VnaCBhIHNlcmllcyBvZiBwcmFjdGljYWwgbGVhZGVyc2hpcCBhc3NpZ25tZW50cy4gCiDCoCIsIkhvdyB0byBJbXByb3ZlIFlvdXIgTGVhZGVyc2hpcCBQb3RlbnRpYWwiLE9MQzEwMDM0MSwyLEFueXRpbWUsIkhvdyB0byBTcGVhayBpbiBGcm9udCBvZiBDcm93ZHMiLE9MQzQyMDAyNSwyMC8wNS8yMDE3LDMwMDAwMDEzMzk3MDg3OAosLCwsSW5hY3RpdmUsTGVhZGVyc2hpcCxPTEMxMDEwMDEsIkxlYXJuIGVzc2VudGlhbCBsZWFkZXJzaGlwIHNraWxscywgaW5jbHVkaW5nIGhvdyB0byBpbnNwaXJlIGFuZCBtb3RpdmF0ZSBpbmRpdmlkdWFscywgbWFuYWdlIHRhbGVudCwgaW5mbHVlbmNlIHdpdGhvdXQgYXV0aG9yaXR5LCBhbmQgbGVhZCB0ZWFtcy4gIiwzMS8xMC8yMDE2LCJJbiB0aGlzIHNwZWNpYWxpemF0aW9uLCB5b3Ugd2lsbCBsZWFybiBlc3NlbnRpYWwgbGVhZGVyc2hpcCBza2lsbHMsIGluY2x1ZGluZyBob3cgdG8gaW5zcGlyZSBhbmQgbW90aXZhdGUgaW5kaXZpZHVhbHMsIG1hbmFnZSB0YWxlbnQsIGluZmx1ZW5jZSB3aXRob3V0IGF1dGhvcml0eSwgYW5kIGxlYWQgdGVhbXMuIEluIGV2ZXJ5IGNvdXJzZSwgeW91IHdpbGwgaGF2ZSBhbiBvcHBvcnR1bml0eSB0byBhcHBseSBuZXcgbGVhZGVyc2hpcCBza2lsbHMgYnkgd29ya2luZyB0aHJvdWdoIGEgc2VyaWVzIG9mIHByYWN0aWNhbCBsZWFkZXJzaGlwIGFzc2lnbm1lbnRzLiAKIMKgIiwiSG93IHRvIEltcHJvdmUgWW91ciBMZWFkZXJzaGlwIFBvdGVudGlhbCIsT0xDMTAwMzQxLDIsQW55dGltZSwiSG93IHRvIGJlIGFuIEVmZmVjdGl2ZSBMZWFkZXIgLSBTQ09STSAxLjIgYW5kIEhBQ1AiLE9MQzQyMDAyOCwyMC8wNS8yMDE3LDMwMDAwMDEzMzk3MDg3OAosLCwsSW5hY3RpdmUsTGVhZGVyc2hpcCxPTEMxMDEwMDEsIkxlYXJuIGVzc2VudGlhbCBsZWFkZXJzaGlwIHNraWxscywgaW5jbHVkaW5nIGhvdyB0byBpbnNwaXJlIGFuZCBtb3RpdmF0ZSBpbmRpdmlkdWFscywgbWFuYWdlIHRhbGVudCwgaW5mbHVlbmNlIHdpdGhvdXQgYXV0aG9yaXR5LCBhbmQgbGVhZCB0ZWFtcy4gIiwzMS8xMC8yMDE2LCJJbiB0aGlzIHNwZWNpYWxpemF0aW9uLCB5b3Ugd2lsbCBsZWFybiBlc3NlbnRpYWwgbGVhZGVyc2hpcCBza2lsbHMsIGluY2x1ZGluZyBob3cgdG8gaW5zcGlyZSBhbmQgbW90aXZhdGUgaW5kaXZpZHVhbHMsIG1hbmFnZSB0YWxlbnQsIGluZmx1ZW5jZSB3aXRob3V0IGF1dGhvcml0eSwgYW5kIGxlYWQgdGVhbXMuIEluIGV2ZXJ5IGNvdXJzZSwgeW91IHdpbGwgaGF2ZSBhbiBvcHBvcnR1bml0eSB0byBhcHBseSBuZXcgbGVhZGVyc2hpcCBza2lsbHMgYnkgd29ya2luZyB0aHJvdWdoIGEgc2VyaWVzIG9mIHByYWN0aWNhbCBsZWFkZXJzaGlwIGFzc2lnbm1lbnRzLiAKIMKgIiwiTGVhZGluZyBhIFN1Y2Nlc3NmdWwgVGVhbSIsT0xDMTAwMzQwLDEsQW55dGltZSwiTGVhZGVyc2hpcCBpbiBDcmlzaXMiLE9MQzQyMDAyNCwyMC8wNS8yMDE3LDMwMDAwMDEzMzk3MDg3OAosLCwsSW5hY3RpdmUsTGVhZGVyc2hpcCxPTEMxMDEwMDEsIkxlYXJuIGVzc2VudGlhbCBsZWFkZXJzaGlwIHNraWxscywgaW5jbHVkaW5nIGhvdyB0byBpbnNwaXJlIGFuZCBtb3RpdmF0ZSBpbmRpdmlkdWFscywgbWFuYWdlIHRhbGVudCwgaW5mbHVlbmNlIHdpdGhvdXQgYXV0aG9yaXR5LCBhbmQgbGVhZCB0ZWFtcy4gIiwzMS8xMC8yMDE2LCJJbiB0aGlzIHNwZWNpYWxpemF0aW9uLCB5b3Ugd2lsbCBsZWFybiBlc3NlbnRpYWwgbGVhZGVyc2hpcCBza2lsbHMsIGluY2x1ZGluZyBob3cgdG8gaW5zcGlyZSBhbmQgbW90aXZhdGUgaW5kaXZpZHVhbHMsIG1hbmFnZSB0YWxlbnQsIGluZmx1ZW5jZSB3aXRob3V0IGF1dGhvcml0eSwgYW5kIGxlYWQgdGVhbXMuIEluIGV2ZXJ5IGNvdXJzZSwgeW91IHdpbGwgaGF2ZSBhbiBvcHBvcnR1bml0eSB0byBhcHBseSBuZXcgbGVhZGVyc2hpcCBza2lsbHMgYnkgd29ya2luZyB0aHJvdWdoIGEgc2VyaWVzIG9mIHByYWN0aWNhbCBsZWFkZXJzaGlwIGFzc2lnbm1lbnRzLiAKIMKgIiwiTGVhZGluZyBhIFN1Y2Nlc3NmdWwgVGVhbSIsT0xDMTAwMzQwLDEsQW55dGltZSwiTW90aXZhdGluZyBZb3VyIFRlYW0iLE9MQzQyMDAyOSwyMC8wNS8yMDE3LDMwMDAwMDEzMzk3MDg3OAosLCwsQWN0aXZlLCJMZWFkZXJzaGlwIExldmVsIDIiLE9MQzIxMzAyNCwiTGVhcm4gdG8gYmVjb21lIGEgbGVhZGVyIG90aGVycyB3aWxsIHdhbnQgdG8gZm9sbG93LiAiLDEwLzA3LzIwMjAsIkxlYXJuIHRvIGJlY29tZSBhIGxlYWRlciBvdGhlcnMgd2lsbCB3YW50IHRvIGZvbGxvdy4gQnkgZmlyc3QgZGV2ZWxvcGluZyB5b3Vyc2VsZiBhcyBhIGxlYWRlciwgeW91IGNhbiB0YWtlIG9uIHRoZSBtb3N0IGNoYWxsZW5naW5nIGxlYWRlcnNoaXAgcmVzcG9uc2liaWxpdGllczogZXN0YWJsaXNoaW5nIGFuZCBleGVjdXRpbmcgeW91ciBzdHJhdGVnaWMgdmlzaW9uLCBleGVjdXRpbmcgYWdhaW5zdCB0aGF0IHZpc2lvbiwgYW5kIGhhcm5lc3NpbmcgeW91ciBtb3N0IHBvd2VyZnVsIGNvbXBldGl0aXZlIGFkdmFudGFnZSwgeW91ciBwZW9wbGUuIixBc3Nlc3NtZW50LE9MQzIxMzk3NyxBbGwsQW55dGltZSwiTGVhZGVyc2hpcCAtIFRlc3QgT3V0IixPTEM0MjAwNzksMzEvMTIvNDcxMiwzMDAwMDAyMDQxNjg5NDcKLCwsLEFjdGl2ZSwiTGVhZGVyc2hpcCBMZXZlbCAyIixPTEMyMTMwMjQsIkxlYXJuIHRvIGJlY29tZSBhIGxlYWRlciBvdGhlcnMgd2lsbCB3YW50IHRvIGZvbGxvdy4gIiwxMC8wNy8yMDIwLCJMZWFybiB0byBiZWNvbWUgYSBsZWFkZXIgb3RoZXJzIHdpbGwgd2FudCB0byBmb2xsb3cuIEJ5IGZpcnN0IGRldmVsb3BpbmcgeW91cnNlbGYgYXMgYSBsZWFkZXIsIHlvdSBjYW4gdGFrZSBvbiB0aGUgbW9zdCBjaGFsbGVuZ2luZyBsZWFkZXJzaGlwIHJlc3BvbnNpYmlsaXRpZXM6IGVzdGFibGlzaGluZyBhbmQgZXhlY3V0aW5nIHlvdXIgc3RyYXRlZ2ljIHZpc2lvbiwgZXhlY3V0aW5nIGFnYWluc3QgdGhhdCB2aXNpb24sIGFuZCBoYXJuZXNzaW5nIHlvdXIgbW9zdCBwb3dlcmZ1bCBjb21wZXRpdGl2ZSBhZHZhbnRhZ2UsIHlvdXIgcGVvcGxlLiIsIkVtZXJnaW5nIExlYWRlcnNoaXAgRm91bmRhdGlvbiIsT0xDMjEzMDI3LEFsbCxBbnl0aW1lLCJTdHJvbmcgTWFuYWdlcnMgYW5kIFN0cm9uZyBUZWFtcyAtIEhBQ1AgLSBPcGVuU2VzYW1lIixPTEM0MjAwNzUsMzEvMTIvNDcxMiwzMDAwMDAyMDQxNjg5NDcKLCwsLEFjdGl2ZSwiTGVhZGVyc2hpcCBMZXZlbCAyIixPTEMyMTMwMjQsIkxlYXJuIHRvIGJlY29tZSBhIGxlYWRlciBvdGhlcnMgd2lsbCB3YW50IHRvIGZvbGxvdy4gIiwxMC8wNy8yMDIwLCJMZWFybiB0byBiZWNvbWUgYSBsZWFkZXIgb3RoZXJzIHdpbGwgd2FudCB0byBmb2xsb3cuIEJ5IGZpcnN0IGRldmVsb3BpbmcgeW91cnNlbGYgYXMgYSBsZWFkZXIsIHlvdSBjYW4gdGFrZSBvbiB0aGUgbW9zdCBjaGFsbGVuZ2luZyBsZWFkZXJzaGlwIHJlc3BvbnNpYmlsaXRpZXM6IGVzdGFibGlzaGluZyBhbmQgZXhlY3V0aW5nIHlvdXIgc3RyYXRlZ2ljIHZpc2lvbiwgZXhlY3V0aW5nIGFnYWluc3QgdGhhdCB2aXNpb24sIGFuZCBoYXJuZXNzaW5nIHlvdXIgbW9zdCBwb3dlcmZ1bCBjb21wZXRpdGl2ZSBhZHZhbnRhZ2UsIHlvdXIgcGVvcGxlLiIsIkxlYWRlcnNoaXAgQm9vdGNhbXAiLE9MQzIxMzA2MixBbGwsQW55dGltZSwiSW50cm8gdG8gUGVyZm9ybWFuY2UgTGVhZGVyc2hpcCAtIFZJTFQiLE9MQzQyMDA4OCwzMS8xMi80NzEyLDMwMDAwMDIwNDE2ODk0NwosLCwsQWN0aXZlLCJMZWFkZXJzaGlwIExldmVsIDIiLE9MQzIxMzAyNCwiTGVhcm4gdG8gYmVjb21lIGEgbGVhZGVyIG90aGVycyB3aWxsIHdhbnQgdG8gZm9sbG93LiAiLDEwLzA3LzIwMjAsIkxlYXJuIHRvIGJlY29tZSBhIGxlYWRlciBvdGhlcnMgd2lsbCB3YW50IHRvIGZvbGxvdy4gQnkgZmlyc3QgZGV2ZWxvcGluZyB5b3Vyc2VsZiBhcyBhIGxlYWRlciwgeW91IGNhbiB0YWtlIG9uIHRoZSBtb3N0IGNoYWxsZW5naW5nIGxlYWRlcnNoaXAgcmVzcG9uc2liaWxpdGllczogZXN0YWJsaXNoaW5nIGFuZCBleGVjdXRpbmcgeW91ciBzdHJhdGVnaWMgdmlzaW9uLCBleGVjdXRpbmcgYWdhaW5zdCB0aGF0IHZpc2lvbiwgYW5kIGhhcm5lc3NpbmcgeW91ciBtb3N0IHBvd2VyZnVsIGNvbXBldGl0aXZlIGFkdmFudGFnZSwgeW91ciBwZW9wbGUuIiwiTGVhZGVyc2hpcCBCb290Y2FtcCIsT0xDMjEzMDYyLEFsbCxBbnl0aW1lLCJMZWFkZXJzaGlwIERldmVsb3BtZW50IEJvb3RjYW1wIixPTEM0MjAwNzgsMzEvMTIvNDcxMiwzMDAwMDAyMDQxNjg5NDcKLCwsLEFjdGl2ZSwiTGVhZGVyc2hpcCBMZXZlbCAyIixPTEMyMTMwMjQsIkxlYXJuIHRvIGJlY29tZSBhIGxlYWRlciBvdGhlcnMgd2lsbCB3YW50IHRvIGZvbGxvdy4gIiwxMC8wNy8yMDIwLCJMZWFybiB0byBiZWNvbWUgYSBsZWFkZXIgb3RoZXJzIHdpbGwgd2FudCB0byBmb2xsb3cuIEJ5IGZpcnN0IGRldmVsb3BpbmcgeW91cnNlbGYgYXMgYSBsZWFkZXIsIHlvdSBjYW4gdGFrZSBvbiB0aGUgbW9zdCBjaGFsbGVuZ2luZyBsZWFkZXJzaGlwIHJlc3BvbnNpYmlsaXRpZXM6IGVzdGFibGlzaGluZyBhbmQgZXhlY3V0aW5nIHlvdXIgc3RyYXRlZ2ljIHZpc2lvbiwgZXhlY3V0aW5nIGFnYWluc3QgdGhhdCB2aXNpb24sIGFuZCBoYXJuZXNzaW5nIHlvdXIgbW9zdCBwb3dlcmZ1bCBjb21wZXRpdGl2ZSBhZHZhbnRhZ2UsIHlvdXIgcGVvcGxlLiIsIkxlYWRlcnNoaXAgQm9vdGNhbXAiLE9MQzIxMzA2MixBbGwsQW55dGltZSwiTWFuYWdpbmcgWW91ciBNYW5hZ2VyIC0gTGlua2VkSW4gTGVhcm5pbmciLE9MQzQyMDEwNiwzMS8xMi80NzEyLDMwMDAwMDIwNDE2ODk0NwosLCwsQWN0aXZlLCJMZWFkZXJzaGlwIExldmVsIDIiLE9MQzIxMzAyNCwiTGVhcm4gdG8gYmVjb21lIGEgbGVhZGVyIG90aGVycyB3aWxsIHdhbnQgdG8gZm9sbG93LiAiLDEwLzA3LzIwMjAsIkxlYXJuIHRvIGJlY29tZSBhIGxlYWRlciBvdGhlcnMgd2lsbCB3YW50IHRvIGZvbGxvdy4gQnkgZmlyc3QgZGV2ZWxvcGluZyB5b3Vyc2VsZiBhcyBhIGxlYWRlciwgeW91IGNhbiB0YWtlIG9uIHRoZSBtb3N0IGNoYWxsZW5naW5nIGxlYWRlcnNoaXAgcmVzcG9uc2liaWxpdGllczogZXN0YWJsaXNoaW5nIGFuZCBleGVjdXRpbmcgeW91ciBzdHJhdGVnaWMgdmlzaW9uLCBleGVjdXRpbmcgYWdhaW5zdCB0aGF0IHZpc2lvbiwgYW5kIGhhcm5lc3NpbmcgeW91ciBtb3N0IHBvd2VyZnVsIGNvbXBldGl0aXZlIGFkdmFudGFnZSwgeW91ciBwZW9wbGUuIiwiTGVhZGluZyB3aXRoIEVtb3Rpb25hbCBJbnRlbGxpZ2VuY2UiLE9MQzIxMzAyOSxBbGwsQW55dGltZSwiRGV2ZWxvcGluZyBTa2lsbHMgdG8gVW5kZXJzdGFuZCBPdGhlciBQZW9wbGUgLSBQREYgYW5kIFdlYiBMaW5rIixPTEM0MjAwODUsMzEvMTIvNDcxMiwzMDAwMDAyMDQxNjg5NDcKLCwsLEFjdGl2ZSwiTGVhZGVyc2hpcCBMZXZlbCAyIixPTEMyMTMwMjQsIkxlYXJuIHRvIGJlY29tZSBhIGxlYWRlciBvdGhlcnMgd2lsbCB3YW50IHRvIGZvbGxvdy4gIiwxMC8wNy8yMDIwLCJMZWFybiB0byBiZWNvbWUgYSBsZWFkZXIgb3RoZXJzIHdpbGwgd2FudCB0byBmb2xsb3cuIEJ5IGZpcnN0IGRldmVsb3BpbmcgeW91cnNlbGYgYXMgYSBsZWFkZXIsIHlvdSBjYW4gdGFrZSBvbiB0aGUgbW9zdCBjaGFsbGVuZ2luZyBsZWFkZXJzaGlwIHJlc3BvbnNpYmlsaXRpZXM6IGVzdGFibGlzaGluZyBhbmQgZXhlY3V0aW5nIHlvdXIgc3RyYXRlZ2ljIHZpc2lvbiwgZXhlY3V0aW5nIGFnYWluc3QgdGhhdCB2aXNpb24sIGFuZCBoYXJuZXNzaW5nIHlvdXIgbW9zdCBwb3dlcmZ1bCBjb21wZXRpdGl2ZSBhZHZhbnRhZ2UsIHlvdXIgcGVvcGxlLiIsIkxlYWRpbmcgd2l0aCBFbW90aW9uYWwgSW50ZWxsaWdlbmNlIixPTEMyMTMwMjksQWxsLEFueXRpbWUsIkVtcGF0aHkgYW5kIExlYWRlcnNoaXAsIEhvdyB0byBVbmRlcnN0YW5kIHlvdXIgRW1wbG95ZWVzIC0gVmlkZW8iLE9MQzQyMDA4NCwzMS8xMi80NzEyLDMwMDAwMDIwNDE2ODk0NwosLCwsQWN0aXZlLCJMZWFkZXJzaGlwIExldmVsIDIiLE9MQzIxMzAyNCwiTGVhcm4gdG8gYmVjb21lIGEgbGVhZGVyIG90aGVycyB3aWxsIHdhbnQgdG8gZm9sbG93LiAiLDEwLzA3LzIwMjAsIkxlYXJuIHRvIGJlY29tZSBhIGxlYWRlciBvdGhlcnMgd2lsbCB3YW50IHRvIGZvbGxvdy4gQnkgZmlyc3QgZGV2ZWxvcGluZyB5b3Vyc2VsZiBhcyBhIGxlYWRlciwgeW91IGNhbiB0YWtlIG9uIHRoZSBtb3N0IGNoYWxsZW5naW5nIGxlYWRlcnNoaXAgcmVzcG9uc2liaWxpdGllczogZXN0YWJsaXNoaW5nIGFuZCBleGVjdXRpbmcgeW91ciBzdHJhdGVnaWMgdmlzaW9uLCBleGVjdXRpbmcgYWdhaW5zdCB0aGF0IHZpc2lvbiwgYW5kIGhhcm5lc3NpbmcgeW91ciBtb3N0IHBvd2VyZnVsIGNvbXBldGl0aXZlIGFkdmFudGFnZSwgeW91ciBwZW9wbGUuIiwiTGVhZGluZyB3aXRoIEVtb3Rpb25hbCBJbnRlbGxpZ2VuY2UiLE9MQzIxMzAyOSxBbGwsQW55dGltZSwiVGhyZWUgUm91dGVzIHRvIEdvb2QgQ29tbXVuaWNhdGlvbiAtIFNDT1JNIixPTEM0MjAwNzcsMzEvMTIvNDcxMiwzMDAwMDAyMDQxNjg5NDcKLCwsLEFjdGl2ZSwiTGVhZGVyc2hpcCBMZXZlbCAzIixPTEMyMTUwNTQsIkRldmVsb3AgZWZmZWN0aXZlIGNvbW11bmljYXRpb24gc2tpbGxzIGFuZCBpbnNwaXJlIGFuZCBlbnRodXNlIHlvdXIgdGVhbSEiLDEzLzA3LzIwMjAsIldoYXRldmVyIHRoZSBlbnZpcm9ubWVudCBpbiB3aGljaCB5b3Ugd29yaywgcHJvdmlkaW5nIGVmZmVjdGl2ZSBsZWFkZXJzaGlwIGxlYWRzIHRvIGEgY2xpbWF0ZSB3aGVyZSB0ZWFtIG1lbWJlcnMgd2FudCB0byBnaXZlIG9mIHRoZWlyIGJlc3QgYW5kIHdoZXJlIG9yZ2FuaXNhdGlvbmFsIGdvYWxzIGFyZSBtb3JlIGxpa2VseSB0byBiZSByZWFjaGVkLiBEZXZlbG9wIGVmZmVjdGl2ZSBjb21tdW5pY2F0aW9uIHNraWxscyBhbmQgaW5zcGlyZSBhbmQgZW50aHVzZSB5b3VyIHRlYW0hwqAgQ3JlYXRlIGEgdGVhbSB2aXNpb24sIHNoYXBpbmcgZnV0dXJlIGdvYWxzIGJ5IGZvY3VzaW5nIG9uIHRoZSB0ZWFtJnJzcXVvO3MgZWFybGllciBzdWNjZXNzZXMuIEdpdmUgdGhlIG1lbWJlcnMgb2YgeW91ciB0ZWFtIHRoZSBzZW5zZSBvZiByZXNwb25zaWJpbGl0eSB0aGF0IHdpbGwgbW90aXZhdGUgdGhlbSB0byBhY2hpZXZlIGV4Y2VsbGVudCByZXN1bHRzLiBFbnN1cmUgeW91ciBwZW9wbGUgcGVyZm9ybSB0byB0aGVpciBmdWxsIHBvdGVudGlhbC4gQ2hhbmdlIHJlcXVpcmVzIGxlYWRlcnNoaXAuIEltcHJlc3NpdmUgdGVjaG5pY2FsIGFuZCBhZG1pbmlzdHJhdGl2ZSBza2lsbHMgYXJlIG5vdCBlbm91Z2gsIGFuZCBwZW9wbGUgaW4gSVQgZGVwYXJ0bWVudHMgYXJlIG5vdyBpbmNyZWFzaW5nbHkgZXhwZWN0ZWQgdG8gdXNlIHRoZWlyIHNvZnQgc2tpbGxzIGFzIHdlbGwuIAoKIMKgIiwiRmluYWwgRXZhbHVhdGlvbiIsT0xDMjE1MDYwLEFsbCxBbnl0aW1lLCJMZWFkZXJzaGlwIC0gVGVzdCBPdXQiLE9MQzQyMDA4NywzMS8xMi80NzEyLDMwMDAwMDIwNDMxOTM1NAosLCwsQWN0aXZlLCJMZWFkZXJzaGlwIExldmVsIDMiLE9MQzIxNTA1NCwiRGV2ZWxvcCBlZmZlY3RpdmUgY29tbXVuaWNhdGlvbiBza2lsbHMgYW5kIGluc3BpcmUgYW5kIGVudGh1c2UgeW91ciB0ZWFtISIsMTMvMDcvMjAyMCwiV2hhdGV2ZXIgdGhlIGVudmlyb25tZW50IGluIHdoaWNoIHlvdSB3b3JrLCBwcm92aWRpbmcgZWZmZWN0aXZlIGxlYWRlcnNoaXAgbGVhZHMgdG8gYSBjbGltYXRlIHdoZXJlIHRlYW0gbWVtYmVycyB3YW50IHRvIGdpdmUgb2YgdGhlaXIgYmVzdCBhbmQgd2hlcmUgb3JnYW5pc2F0aW9uYWwgZ29hbHMgYXJlIG1vcmUgbGlrZWx5IHRvIGJlIHJlYWNoZWQuIERldmVsb3AgZWZmZWN0aXZlIGNvbW11bmljYXRpb24gc2tpbGxzIGFuZCBpbnNwaXJlIGFuZCBlbnRodXNlIHlvdXIgdGVhbSHCoCBDcmVhdGUgYSB0ZWFtIHZpc2lvbiwgc2hhcGluZyBmdXR1cmUgZ29hbHMgYnkgZm9jdXNpbmcgb24gdGhlIHRlYW0mcnNxdW87cyBlYXJsaWVyIHN1Y2Nlc3Nlcy4gR2l2ZSB0aGUgbWVtYmVycyBvZiB5b3VyIHRlYW0gdGhlIHNlbnNlIG9mIHJlc3BvbnNpYmlsaXR5IHRoYXQgd2lsbCBtb3RpdmF0ZSB0aGVtIHRvIGFjaGlldmUgZXhjZWxsZW50IHJlc3VsdHMuIEVuc3VyZSB5b3VyIHBlb3BsZSBwZXJmb3JtIHRvIHRoZWlyIGZ1bGwgcG90ZW50aWFsLiBDaGFuZ2UgcmVxdWlyZXMgbGVhZGVyc2hpcC4gSW1wcmVzc2l2ZSB0ZWNobmljYWwgYW5kIGFkbWluaXN0cmF0aXZlIHNraWxscyBhcmUgbm90IGVub3VnaCwgYW5kIHBlb3BsZSBpbiBJVCBkZXBhcnRtZW50cyBhcmUgbm93IGluY3JlYXNpbmdseSBleHBlY3RlZCB0byB1c2UgdGhlaXIgc29mdCBza2lsbHMgYXMgd2VsbC4gCgogwqAiLCJMZWFkZXJzaGlwIEJvb3RjYW1wICIsT0xDMjE1MDU5LEFsbCxBbnl0aW1lLCJBY2NlbGVyYXRpbmcgeW91ciBMZWFkZXJzaGlwIFRyYW5zaXRpb24gLSBJTFQgIixPTEM0MjAwODYsMzEvMTIvNDcxMiwzMDAwMDAyMDQzMTkzNTQKLCwsLEFjdGl2ZSwiTGVhZGVyc2hpcCBMZXZlbCAzIixPTEMyMTUwNTQsIkRldmVsb3AgZWZmZWN0aXZlIGNvbW11bmljYXRpb24gc2tpbGxzIGFuZCBpbnNwaXJlIGFuZCBlbnRodXNlIHlvdXIgdGVhbSEiLDEzLzA3LzIwMjAsIldoYXRldmVyIHRoZSBlbnZpcm9ubWVudCBpbiB3aGljaCB5b3Ugd29yaywgcHJvdmlkaW5nIGVmZmVjdGl2ZSBsZWFkZXJzaGlwIGxlYWRzIHRvIGEgY2xpbWF0ZSB3aGVyZSB0ZWFtIG1lbWJlcnMgd2FudCB0byBnaXZlIG9mIHRoZWlyIGJlc3QgYW5kIHdoZXJlIG9yZ2FuaXNhdGlvbmFsIGdvYWxzIGFyZSBtb3JlIGxpa2VseSB0byBiZSByZWFjaGVkLiBEZXZlbG9wIGVmZmVjdGl2ZSBjb21tdW5pY2F0aW9uIHNraWxscyBhbmQgaW5zcGlyZSBhbmQgZW50aHVzZSB5b3VyIHRlYW0hwqAgQ3JlYXRlIGEgdGVhbSB2aXNpb24sIHNoYXBpbmcgZnV0dXJlIGdvYWxzIGJ5IGZvY3VzaW5nIG9uIHRoZSB0ZWFtJnJzcXVvO3MgZWFybGllciBzdWNjZXNzZXMuIEdpdmUgdGhlIG1lbWJlcnMgb2YgeW91ciB0ZWFtIHRoZSBzZW5zZSBvZiByZXNwb25zaWJpbGl0eSB0aGF0IHdpbGwgbW90aXZhdGUgdGhlbSB0byBhY2hpZXZlIGV4Y2VsbGVudCByZXN1bHRzLiBFbnN1cmUgeW91ciBwZW9wbGUgcGVyZm9ybSB0byB0aGVpciBmdWxsIHBvdGVudGlhbC4gQ2hhbmdlIHJlcXVpcmVzIGxlYWRlcnNoaXAuIEltcHJlc3NpdmUgdGVjaG5pY2FsIGFuZCBhZG1pbmlzdHJhdGl2ZSBza2lsbHMgYXJlIG5vdCBlbm91Z2gsIGFuZCBwZW9wbGUgaW4gSVQgZGVwYXJ0bWVudHMgYXJlIG5vdyBpbmNyZWFzaW5nbHkgZXhwZWN0ZWQgdG8gdXNlIHRoZWlyIHNvZnQgc2tpbGxzIGFzIHdlbGwuIAoKIMKgIiwiTGVhZGluZyBmb3IgU3VjY2VzcyAiLE9MQzIxNTA1NyxBbGwsQW55dGltZSwiTGVhZGluZyBhbmQgRXhlY3V0aW9uIC0gSEFDUCIsT0xDNDIwMDgyLDMxLzEyLzQ3MTIsMzAwMDAwMjA0MzE5MzU0CiwsLCxBY3RpdmUsIkxlYWRlcnNoaXAgTGV2ZWwgMyIsT0xDMjE1MDU0LCJEZXZlbG9wIGVmZmVjdGl2ZSBjb21tdW5pY2F0aW9uIHNraWxscyBhbmQgaW5zcGlyZSBhbmQgZW50aHVzZSB5b3VyIHRlYW0hIiwxMy8wNy8yMDIwLCJXaGF0ZXZlciB0aGUgZW52aXJvbm1lbnQgaW4gd2hpY2ggeW91IHdvcmssIHByb3ZpZGluZyBlZmZlY3RpdmUgbGVhZGVyc2hpcCBsZWFkcyB0byBhIGNsaW1hdGUgd2hlcmUgdGVhbSBtZW1iZXJzIHdhbnQgdG8gZ2l2ZSBvZiB0aGVpciBiZXN0IGFuZCB3aGVyZSBvcmdhbmlzYXRpb25hbCBnb2FscyBhcmUgbW9yZSBsaWtlbHkgdG8gYmUgcmVhY2hlZC4gRGV2ZWxvcCBlZmZlY3RpdmUgY29tbXVuaWNhdGlvbiBza2lsbHMgYW5kIGluc3BpcmUgYW5kIGVudGh1c2UgeW91ciB0ZWFtIcKgIENyZWF0ZSBhIHRlYW0gdmlzaW9uLCBzaGFwaW5nIGZ1dHVyZSBnb2FscyBieSBmb2N1c2luZyBvbiB0aGUgdGVhbSZyc3F1bztzIGVhcmxpZXIgc3VjY2Vzc2VzLiBHaXZlIHRoZSBtZW1iZXJzIG9mIHlvdXIgdGVhbSB0aGUgc2Vuc2Ugb2YgcmVzcG9uc2liaWxpdHkgdGhhdCB3aWxsIG1vdGl2YXRlIHRoZW0gdG8gYWNoaWV2ZSBleGNlbGxlbnQgcmVzdWx0cy4gRW5zdXJlIHlvdXIgcGVvcGxlIHBlcmZvcm0gdG8gdGhlaXIgZnVsbCBwb3RlbnRpYWwuIENoYW5nZSByZXF1aXJlcyBsZWFkZXJzaGlwLiBJbXByZXNzaXZlIHRlY2huaWNhbCBhbmQgYWRtaW5pc3RyYXRpdmUgc2tpbGxzIGFyZSBub3QgZW5vdWdoLCBhbmQgcGVvcGxlIGluIElUIGRlcGFydG1lbnRzIGFyZSBub3cgaW5jcmVhc2luZ2x5IGV4cGVjdGVkIHRvIHVzZSB0aGVpciBzb2Z0IHNraWxscyBhcyB3ZWxsLiAKCiDCoCIsIkxlYWRpbmcgZm9yIFN1Y2Nlc3MgIixPTEMyMTUwNTcsQWxsLEFueXRpbWUsIlByZXBhcmUgdG8gSW5mbHVlbmNlIGFuZCBJbXBhY3QgLSBTQ09STSIsT0xDNDIwMDgwLDMxLzEyLzQ3MTIsMzAwMDAwMjA0MzE5MzU0CiwsLCxBY3RpdmUsIkxlYWRlcnNoaXAgTGV2ZWwgMyIsT0xDMjE1MDU0LCJEZXZlbG9wIGVmZmVjdGl2ZSBjb21tdW5pY2F0aW9uIHNraWxscyBhbmQgaW5zcGlyZSBhbmQgZW50aHVzZSB5b3VyIHRlYW0hIiwxMy8wNy8yMDIwLCJXaGF0ZXZlciB0aGUgZW52aXJvbm1lbnQgaW4gd2hpY2ggeW91IHdvcmssIHByb3ZpZGluZyBlZmZlY3RpdmUgbGVhZGVyc2hpcCBsZWFkcyB0byBhIGNsaW1hdGUgd2hlcmUgdGVhbSBtZW1iZXJzIHdhbnQgdG8gZ2l2ZSBvZiB0aGVpciBiZXN0IGFuZCB3aGVyZSBvcmdhbmlzYXRpb25hbCBnb2FscyBhcmUgbW9yZSBsaWtlbHkgdG8gYmUgcmVhY2hlZC4gRGV2ZWxvcCBlZmZlY3RpdmUgY29tbXVuaWNhdGlvbiBza2lsbHMgYW5kIGluc3BpcmUgYW5kIGVudGh1c2UgeW91ciB0ZWFtIcKgIENyZWF0ZSBhIHRlYW0gdmlzaW9uLCBzaGFwaW5nIGZ1dHVyZSBnb2FscyBieSBmb2N1c2luZyBvbiB0aGUgdGVhbSZyc3F1bztzIGVhcmxpZXIgc3VjY2Vzc2VzLiBHaXZlIHRoZSBtZW1iZXJzIG9mIHlvdXIgdGVhbSB0aGUgc2Vuc2Ugb2YgcmVzcG9uc2liaWxpdHkgdGhhdCB3aWxsIG1vdGl2YXRlIHRoZW0gdG8gYWNoaWV2ZSBleGNlbGxlbnQgcmVzdWx0cy4gRW5zdXJlIHlvdXIgcGVvcGxlIHBlcmZvcm0gdG8gdGhlaXIgZnVsbCBwb3RlbnRpYWwuIENoYW5nZSByZXF1aXJlcyBsZWFkZXJzaGlwLiBJbXByZXNzaXZlIHRlY2huaWNhbCBhbmQgYWRtaW5pc3RyYXRpdmUgc2tpbGxzIGFyZSBub3QgZW5vdWdoLCBhbmQgcGVvcGxlIGluIElUIGRlcGFydG1lbnRzIGFyZSBub3cgaW5jcmVhc2luZ2x5IGV4cGVjdGVkIHRvIHVzZSB0aGVpciBzb2Z0IHNraWxscyBhcyB3ZWxsLiAKCiDCoCIsIkxlYWRpbmcgZm9yIFN1Y2Nlc3MgIixPTEMyMTUwNTcsQWxsLEFueXRpbWUsIlN0cmF0ZWdpZXMgZm9yIExlYWRlcnNoaXAgLSBWSURFTyIsT0xDNDIwMDgxLDMxLzEyLzQ3MTIsMzAwMDAwMjA0MzE5MzU0CiwsLCxBY3RpdmUsIkxlYWRlcnNoaXAgTGV2ZWwgMyIsT0xDMjE1MDU0LCJEZXZlbG9wIGVmZmVjdGl2ZSBjb21tdW5pY2F0aW9uIHNraWxscyBhbmQgaW5zcGlyZSBhbmQgZW50aHVzZSB5b3VyIHRlYW0hIiwxMy8wNy8yMDIwLCJXaGF0ZXZlciB0aGUgZW52aXJvbm1lbnQgaW4gd2hpY2ggeW91IHdvcmssIHByb3ZpZGluZyBlZmZlY3RpdmUgbGVhZGVyc2hpcCBsZWFkcyB0byBhIGNsaW1hdGUgd2hlcmUgdGVhbSBtZW1iZXJzIHdhbnQgdG8gZ2l2ZSBvZiB0aGVpciBiZXN0IGFuZCB3aGVyZSBvcmdhbmlzYXRpb25hbCBnb2FscyBhcmUgbW9yZSBsaWtlbHkgdG8gYmUgcmVhY2hlZC4gRGV2ZWxvcCBlZmZlY3RpdmUgY29tbXVuaWNhdGlvbiBza2lsbHMgYW5kIGluc3BpcmUgYW5kIGVudGh1c2UgeW91ciB0ZWFtIcKgIENyZWF0ZSBhIHRlYW0gdmlzaW9uLCBzaGFwaW5nIGZ1dHVyZSBnb2FscyBieSBmb2N1c2luZyBvbiB0aGUgdGVhbSZyc3F1bztzIGVhcmxpZXIgc3VjY2Vzc2VzLiBHaXZlIHRoZSBtZW1iZXJzIG9mIHlvdXIgdGVhbSB0aGUgc2Vuc2Ugb2YgcmVzcG9uc2liaWxpdHkgdGhhdCB3aWxsIG1vdGl2YXRlIHRoZW0gdG8gYWNoaWV2ZSBleGNlbGxlbnQgcmVzdWx0cy4gRW5zdXJlIHlvdXIgcGVvcGxlIHBlcmZvcm0gdG8gdGhlaXIgZnVsbCBwb3RlbnRpYWwuIENoYW5nZSByZXF1aXJlcyBsZWFkZXJzaGlwLiBJbXByZXNzaXZlIHRlY2huaWNhbCBhbmQgYWRtaW5pc3RyYXRpdmUgc2tpbGxzIGFyZSBub3QgZW5vdWdoLCBhbmQgcGVvcGxlIGluIElUIGRlcGFydG1lbnRzIGFyZSBub3cgaW5jcmVhc2luZ2x5IGV4cGVjdGVkIHRvIHVzZSB0aGVpciBzb2Z0IHNraWxscyBhcyB3ZWxsLiAKCiDCoCIsIlRha2luZyBpdCBGdXJ0aGVyIixPTEMyMTUwNTgsQWxsLEFueXRpbWUsIkhpZ2ggUGVyZm9ybWFuY2UgTGVhZGVyc2hpcCAtIFZJTFQiLE9MQzQyMDA4MywzMS8xMi80NzEyLDMwMDAwMDIwNDMxOTM1NAosLCwsQWN0aXZlLCJMZWFkZXJzaGlwIFNraWxscyIsT0xDMTA0MDAzLCJMZWFybiBlc3NlbnRpYWwgbGVhZGVyc2hpcCBza2lsbHMsIGluY2x1ZGluZyBob3cgdG8gaW5zcGlyZSBhbmQgbW90aXZhdGUgaW5kaXZpZHVhbHMsIG1hbmFnZSB0YWxlbnQsIGluZmx1ZW5jZSB3aXRob3V0IGF1dGhvcml0eSwgYW5kIGxlYWQgdGVhbXMuICIsMjUvMDUvMjAxNywiSW4gdGhpcyBzcGVjaWFsaXphdGlvbiwgeW91IHdpbGwgbGVhcm4gZXNzZW50aWFsIGxlYWRlcnNoaXAgc2tpbGxzLCBpbmNsdWRpbmcgaG93IHRvIGluc3BpcmUgYW5kIG1vdGl2YXRlIGluZGl2aWR1YWxzLCBtYW5hZ2UgdGFsZW50LCBpbmZsdWVuY2Ugd2l0aG91dCBhdXRob3JpdHksIGFuZCBsZWFkIHRlYW1zLiBJbiBldmVyeSBjb3Vyc2UsIHlvdSB3aWxsIGhhdmUgYW4gb3Bwb3J0dW5pdHkgdG8gYXBwbHkgbmV3IGxlYWRlcnNoaXAgc2tpbGxzIGJ5IHdvcmtpbmcgdGhyb3VnaCBhIHNlcmllcyBvZiBwcmFjdGljYWwgbGVhZGVyc2hpcCBhc3NpZ25tZW50cy4gIAogwqAiLCJIb3cgdG8gSW1wcm92ZSBZb3VyIExlYWRlcnNoaXAgUG90ZW50aWFsIixPTEMxMDAzODgsMSxBbnl0aW1lLCJFbW90aW9uYWwgSW50ZWxsaWdlbmNlICYgUmVzaWxpZW5jZSIsT0xDNDIwMDk1LDMxLzEyLzQ3MTIsMzAwMDAwMTQ2MDQxODgyCiwsLCxBY3RpdmUsIkxlYWRlcnNoaXAgU2tpbGxzIixPTEMxMDQwMDMsIkxlYXJuIGVzc2VudGlhbCBsZWFkZXJzaGlwIHNraWxscywgaW5jbHVkaW5nIGhvdyB0byBpbnNwaXJlIGFuZCBtb3RpdmF0ZSBpbmRpdmlkdWFscywgbWFuYWdlIHRhbGVudCwgaW5mbHVlbmNlIHdpdGhvdXQgYXV0aG9yaXR5LCBhbmQgbGVhZCB0ZWFtcy4gIiwyNS8wNS8yMDE3LCJJbiB0aGlzIHNwZWNpYWxpemF0aW9uLCB5b3Ugd2lsbCBsZWFybiBlc3NlbnRpYWwgbGVhZGVyc2hpcCBza2lsbHMsIGluY2x1ZGluZyBob3cgdG8gaW5zcGlyZSBhbmQgbW90aXZhdGUgaW5kaXZpZHVhbHMsIG1hbmFnZSB0YWxlbnQsIGluZmx1ZW5jZSB3aXRob3V0IGF1dGhvcml0eSwgYW5kIGxlYWQgdGVhbXMuIEluIGV2ZXJ5IGNvdXJzZSwgeW91IHdpbGwgaGF2ZSBhbiBvcHBvcnR1bml0eSB0byBhcHBseSBuZXcgbGVhZGVyc2hpcCBza2lsbHMgYnkgd29ya2luZyB0aHJvdWdoIGEgc2VyaWVzIG9mIHByYWN0aWNhbCBsZWFkZXJzaGlwIGFzc2lnbm1lbnRzLiAgCiDCoCIsIkhvdyB0byBJbXByb3ZlIFlvdXIgTGVhZGVyc2hpcCBQb3RlbnRpYWwiLE9MQzEwMDM4OCwxLEFueXRpbWUsIkhvdyB0byBiZSBhbiBFZmZlY3RpdmUgTGVhZGVyIC0gU0NPUk0gMS4yIGFuZCBIQUNQIixPTEM0MjAwMzYsMzEvMTIvNDcxMiwzMDAwMDAxNDYwNDE4ODIKLCwsLEFjdGl2ZSwiTGVhZGVyc2hpcCBTa2lsbHMiLE9MQzEwNDAwMywiTGVhcm4gZXNzZW50aWFsIGxlYWRlcnNoaXAgc2tpbGxzLCBpbmNsdWRpbmcgaG93IHRvIGluc3BpcmUgYW5kIG1vdGl2YXRlIGluZGl2aWR1YWxzLCBtYW5hZ2UgdGFsZW50LCBpbmZsdWVuY2Ugd2l0aG91dCBhdXRob3JpdHksIGFuZCBsZWFkIHRlYW1zLiAiLDI1LzA1LzIwMTcsIkluIHRoaXMgc3BlY2lhbGl6YXRpb24sIHlvdSB3aWxsIGxlYXJuIGVzc2VudGlhbCBsZWFkZXJzaGlwIHNraWxscywgaW5jbHVkaW5nIGhvdyB0byBpbnNwaXJlIGFuZCBtb3RpdmF0ZSBpbmRpdmlkdWFscywgbWFuYWdlIHRhbGVudCwgaW5mbHVlbmNlIHdpdGhvdXQgYXV0aG9yaXR5LCBhbmQgbGVhZCB0ZWFtcy4gSW4gZXZlcnkgY291cnNlLCB5b3Ugd2lsbCBoYXZlIGFuIG9wcG9ydHVuaXR5IHRvIGFwcGx5IG5ldyBsZWFkZXJzaGlwIHNraWxscyBieSB3b3JraW5nIHRocm91Z2ggYSBzZXJpZXMgb2YgcHJhY3RpY2FsIGxlYWRlcnNoaXAgYXNzaWdubWVudHMuICAKIMKgIiwiTGVhZGluZyBhIFN1Y2Nlc3NmdWwgVGVhbSIsT0xDMTAwMzg5LDEsQW55dGltZSwiTGVhZGVyc2hpcCBpbiBDcmlzaXMiLE9MQzQyMDAzNywzMS8xMi80NzEyLDMwMDAwMDE0NjA0MTg4MgosLCwsQWN0aXZlLCJMZWFkZXJzaGlwIFNraWxscyIsT0xDMTA0MDAzLCJMZWFybiBlc3NlbnRpYWwgbGVhZGVyc2hpcCBza2lsbHMsIGluY2x1ZGluZyBob3cgdG8gaW5zcGlyZSBhbmQgbW90aXZhdGUgaW5kaXZpZHVhbHMsIG1hbmFnZSB0YWxlbnQsIGluZmx1ZW5jZSB3aXRob3V0IGF1dGhvcml0eSwgYW5kIGxlYWQgdGVhbXMuICIsMjUvMDUvMjAxNywiSW4gdGhpcyBzcGVjaWFsaXphdGlvbiwgeW91IHdpbGwgbGVhcm4gZXNzZW50aWFsIGxlYWRlcnNoaXAgc2tpbGxzLCBpbmNsdWRpbmcgaG93IHRvIGluc3BpcmUgYW5kIG1vdGl2YXRlIGluZGl2aWR1YWxzLCBtYW5hZ2UgdGFsZW50LCBpbmZsdWVuY2Ugd2l0aG91dCBhdXRob3JpdHksIGFuZCBsZWFkIHRlYW1zLiBJbiBldmVyeSBjb3Vyc2UsIHlvdSB3aWxsIGhhdmUgYW4gb3Bwb3J0dW5pdHkgdG8gYXBwbHkgbmV3IGxlYWRlcnNoaXAgc2tpbGxzIGJ5IHdvcmtpbmcgdGhyb3VnaCBhIHNlcmllcyBvZiBwcmFjdGljYWwgbGVhZGVyc2hpcCBhc3NpZ25tZW50cy4gIAogwqAiLCJMZWFkaW5nIGEgU3VjY2Vzc2Z1bCBUZWFtIixPTEMxMDAzODksMSxBbnl0aW1lLCJNb3RpdmF0aW5nIFlvdXIgVGVhbSIsT0xDNDIwMDM4LDMxLzEyLzQ3MTIsMzAwMDAwMTQ2MDQxODgyCiwsLCxBY3RpdmUsIk5ldyBNYW5hZ2VyIFRyYWluaW5nIFNwZWNpYWxpemF0aW9uIixPTEMxMDY1MjIsIk5ldyBNYW5hZ2VyIFRyYWluaW5nICIsMDEvMDUvMjAxOCwiUmVxdWlyZWQgQm9vdCBDYW1wIGFuZCBOZXcgTWFuYWdlciBGdW5kYW1lbnRhbHMgY29tYmluZWQgU3BlY2lhbGl6YXRpb24iLCJOZXcgTWFuYWdlciBCb290IENhbXAiLE9MQzEwNjUyMyxBbGwsQW55dGltZSwiTWFuYWdlbWVudCAxMDEgOiBOZXcgTWFuYWdlciBCb290IENhbXAiLE9MQzQyMDA0NSwwMS8wNi8yMDE4LDMwMDAwMDE2ODEwMzMwMwosLCwsQWN0aXZlLCJOZXcgTWFuYWdlciBUcmFpbmluZyBTcGVjaWFsaXphdGlvbiIsT0xDMTA2NTIyLCJOZXcgTWFuYWdlciBUcmFpbmluZyAiLDAxLzA1LzIwMTgsIlJlcXVpcmVkIEJvb3QgQ2FtcCBhbmQgTmV3IE1hbmFnZXIgRnVuZGFtZW50YWxzIGNvbWJpbmVkIFNwZWNpYWxpemF0aW9uIiwiTmV3IE1hbmFnZXIgRnVuZGFtZW50YWxzIixPTEMxMDY1MjQsQWxsLEFueXRpbWUsIk1hbmFnZW1lbnQgMjAxIDogTmV3IE1hbmFnZXIgRnVuZGFtZW50YWxzIixPTEM0MjAwNDYsMDEvMDYvMjAxOCwzMDAwMDAxNjgxMDMzMDMKLCwsLEFjdGl2ZSwiT3JnYW5pemF0aW9uYWwgQXdhcmVuZXNzIixPTEMxMDExNjksIk9yZ2FuaXphdGlvbmFsIEF3YXJlbmVzczogSW5uZXIsIE91dGVyIGFuZCBPdGhlciBGb2N1cyIsMDYvMTEvMjAxNywiRHIuIEdvbGVtYW4gaGFzIHdyaXR0ZW4gYWJvdXQgdGhpcyAgaW5uZXItb3RoZXItb3V0ZXIgICAgJmxkcXVvO3RyaXBsZSBmb2N1cyZyZHF1bzvCnSAgIGluIG1hbnkgY29udGV4dHMsIGluY2x1ZGluZyBvcmdhbml6YXRpb25hbCBsZWFkZXJzaGlwIGFuZCBlZHVjYXRpb24uIEluIGhpcyBhcnRpY2xlLCAgJmxkcXVvO1doeSBMZWFkZXJzIE5lZWQgYSBUcmlwbGUgRm9jdXMsJnJkcXVvO8KdICBhZGFwdGVkIGZyb20gaGlzIGJvb2ssICBGb2N1czogVGhlIEhpZGRlbiBEcml2ZXIgb2YgRXhjZWxsZW5jZSwgIEdvbGVtYW4gc2FpZCwgCgogJmxkcXVvO1doZW4gQWNjZW50dXJlIGludGVydmlld2VkIDEwMCBDRU9zIGFib3V0IHRoZSBza2lsbHMgdGhleSBuZWVkZWQgdG8gcnVuIGEgY29tcGFueSBzdWNjZXNzZnVsbHksIGEgc2V0IG9mIDE0IGFiaWxpdGllcyBlbWVyZ2VkLCBmcm9tIHRoaW5raW5nIGdsb2JhbGx5IGFuZCBjcmVhdGluZyBhbiBpbnNwaXJpbmcgc2hhcmVkIHZpc2lvbiwgdG8gZW1icmFjaW5nIGNoYW5nZSBhbmQgdGVjaCBzYXZ2eS4gTm8gb25lIHBlcnNvbiBjb3VsZCBoYXZlIHRoZW0gYWxsLiBCdXQgdGhlcmUgaXMgb25lICZsZHF1bzttZXRhJnJkcXVvO8KdIGFiaWxpdHkgdGhhdCBlbWVyZ2VzIGZyb20gcmVzZWFyY2ggb24gbGVhZGVyc2hpcDogc2VsZi1hd2FyZW5lc3MuIENoaWVmIGV4ZWN1dGl2ZXMgbmVlZCBzZWxmLWF3YXJlbmVzcyB0byBhc3Nlc3MgdGhlaXIgb3duIHN0cmVuZ3RocyBhbmQgd2Vha25lc3NlcywgYW5kIHNvIHN1cnJvdW5kIHRoZW1zZWx2ZXMgd2l0aCBhIHRlYW0gb2YgcGVvcGxlIHdob3NlIHN0cmVuZ3RocyBpbiB0aG9zZSBjb3JlIGFiaWxpdGllcyBjb21wbGVtZW50IHRoZWlyIG93bi4gVGhpcyBtZWFucyAgaW5uZXIgZm9jdXMgLiAKCiBDb21wYW5pZXMgYWxzbyBuZWVkIGxlYWRlcnMgd2hvIGhhdmUgYW4gb3RoZXItZm9jdXMmcmRxdW87JnJkcXVvO3dobyB1bmRlcnN0YW5kIHRoZSBtb3RpdmF0aW9ucyBvZiB0aGVpciBlbXBsb3llZXMgYW5kIHdhbnQgdG8gIGhlbHAgb3RoZXIgcGVvcGxlIGJlIHN1Y2Nlc3NmdWwgLCB0b28uIEZvciBpbnN0YW5jZSwgdGhleSByZWFsaXplIHRoYXQgaWYgc29tZW9uZSBsYWNrcyBhIGdpdmVuIHN0cmVuZ3RoIHRvZGF5LCB0aGV5IGNhbiB3b3JrIHRvIGRldmVsb3AgaXQuIAoKIFN1Y2ggbGVhZGVycyB0YWtlIHRoZSB0aW1lIHRvIG1lbnRvciBhbmQgYWR2aXNlLiBJbiBwcmFjdGljYWwgdGVybXMgdGhpcyBtZWFuczogCgogCgkgTGlzdGVuaW5nIHdpdGhpbiwgdG8gIGFydGljdWxhdGUgYW4gYXV0aGVudGljIHZpc2lvbiBvZiBvdmVyYWxsIGRpcmVjdGlvbiAmcmRxdW87JnJkcXVvO2Zyb20gdGhlIGhlYXJ0IGFuZCB0byB0aGUgaGVhcnQmcmRxdW87JnJkcXVvO3RoYXQgZW5lcmdpemVzIG90aGVycyBldmVuIGFzIGl0IHNldHMgY2xlYXIgZXhwZWN0YXRpb25zLiAKCSBQYXlpbmcgYXR0ZW50aW9uIHRvIHBlb3BsZSZyc3F1bztzIGZlZWxpbmdzIGFuZCBuZWVkcywgYW5kIHNob3dpbmcgY29uY2Vybi4gCgkgTGlzdGVuaW5nIHRvIGFkdmljZSBhbmQgZXhwZXJ0aXNlOyBiZWluZyBjb2xsYWJvcmF0aXZlIGFuZCBtYWtpbmcgZGVjaXNpb25zIGJ5IGNvbnNlbnN1cy4gCgkgQ29hY2hpbmcsIGJhc2VkIG9uIGxpc3RlbmluZyB0byB3aGF0IHRoZSBwZXJzb24gd2FudHMgZnJvbSB0aGVpciBsaWZlLCBjYXJlZXIsIGFuZCBjdXJyZW50IGpvYiZoZWxsaXA7LiAKIAoKIE9mIGNvdXJzZSB0aGF0IGRvZXNuJnJzcXVvO3QgbWVhbiB0aGF0IGxlYWRlcnMgY2FuIGlnbm9yZSBvdGhlciBjb25jZXJucywgbGlrZSBtYXJrZXQgdHJlbmRzIG9yIGlubm92YXRpb24sIHRvIG1lZXQgY2hhbmdpbmcgZGVtYW5kcy4gQnV0IHRoZSBzYW1lIGF0dGVudGlvbiBza2lsbHMgdGhhdCBjYW4gaGVscCBtYW5hZ2Ugb25lJnJzcXVvO3Mgb3duIGVtb3Rpb25zIGFuZCB3b3JrIHJlbGF0aW9uc2hpcHMgY2FuIGhlbHAgbGVhZGVycyBzdGF5IG1vcmUgZmxleGlibGUgYW5kIGFsbG93IGZvciBiZXR0ZXIgb3V0ZXIgZm9jdXMuJnJkcXVvO8KdIiwiU2luZ2xlIFNlY3Rpb24iLE9MQzEwMTIyMyxBbGwsQW55dGltZSwiRGV2ZWxvcGluZyBBIFN0cm9uZyBMZWFkZXJzaGlwIFRlYW0iLE9MQzQyMDA0MywzMS8xMi80NzEyLDMwMDAwMDE1NzA2MjM0NgosLCwsQWN0aXZlLCJPcmdhbml6YXRpb25hbCBBd2FyZW5lc3MiLE9MQzEwMTE2OSwiT3JnYW5pemF0aW9uYWwgQXdhcmVuZXNzOiBJbm5lciwgT3V0ZXIgYW5kIE90aGVyIEZvY3VzIiwwNi8xMS8yMDE3LCJEci4gR29sZW1hbiBoYXMgd3JpdHRlbiBhYm91dCB0aGlzICBpbm5lci1vdGhlci1vdXRlciAgICAmbGRxdW87dHJpcGxlIGZvY3VzJnJkcXVvO8KdICAgaW4gbWFueSBjb250ZXh0cywgaW5jbHVkaW5nIG9yZ2FuaXphdGlvbmFsIGxlYWRlcnNoaXAgYW5kIGVkdWNhdGlvbi4gSW4gaGlzIGFydGljbGUsICAmbGRxdW87V2h5IExlYWRlcnMgTmVlZCBhIFRyaXBsZSBGb2N1cywmcmRxdW87wp0gIGFkYXB0ZWQgZnJvbSBoaXMgYm9vaywgIEZvY3VzOiBUaGUgSGlkZGVuIERyaXZlciBvZiBFeGNlbGxlbmNlLCAgR29sZW1hbiBzYWlkLCAKCiAmbGRxdW87V2hlbiBBY2NlbnR1cmUgaW50ZXJ2aWV3ZWQgMTAwIENFT3MgYWJvdXQgdGhlIHNraWxscyB0aGV5IG5lZWRlZCB0byBydW4gYSBjb21wYW55IHN1Y2Nlc3NmdWxseSwgYSBzZXQgb2YgMTQgYWJpbGl0aWVzIGVtZXJnZWQsIGZyb20gdGhpbmtpbmcgZ2xvYmFsbHkgYW5kIGNyZWF0aW5nIGFuIGluc3BpcmluZyBzaGFyZWQgdmlzaW9uLCB0byBlbWJyYWNpbmcgY2hhbmdlIGFuZCB0ZWNoIHNhdnZ5LiBObyBvbmUgcGVyc29uIGNvdWxkIGhhdmUgdGhlbSBhbGwuIEJ1dCB0aGVyZSBpcyBvbmUgJmxkcXVvO21ldGEmcmRxdW87wp0gYWJpbGl0eSB0aGF0IGVtZXJnZXMgZnJvbSByZXNlYXJjaCBvbiBsZWFkZXJzaGlwOiBzZWxmLWF3YXJlbmVzcy4gQ2hpZWYgZXhlY3V0aXZlcyBuZWVkIHNlbGYtYXdhcmVuZXNzIHRvIGFzc2VzcyB0aGVpciBvd24gc3RyZW5ndGhzIGFuZCB3ZWFrbmVzc2VzLCBhbmQgc28gc3Vycm91bmQgdGhlbXNlbHZlcyB3aXRoIGEgdGVhbSBvZiBwZW9wbGUgd2hvc2Ugc3RyZW5ndGhzIGluIHRob3NlIGNvcmUgYWJpbGl0aWVzIGNvbXBsZW1lbnQgdGhlaXIgb3duLiBUaGlzIG1lYW5zICBpbm5lciBmb2N1cyAuIAoKIENvbXBhbmllcyBhbHNvIG5lZWQgbGVhZGVycyB3aG8gaGF2ZSBhbiBvdGhlci1mb2N1cyZyZHF1bzsmcmRxdW87d2hvIHVuZGVyc3RhbmQgdGhlIG1vdGl2YXRpb25zIG9mIHRoZWlyIGVtcGxveWVlcyBhbmQgd2FudCB0byAgaGVscCBvdGhlciBwZW9wbGUgYmUgc3VjY2Vzc2Z1bCAsIHRvby4gRm9yIGluc3RhbmNlLCB0aGV5IHJlYWxpemUgdGhhdCBpZiBzb21lb25lIGxhY2tzIGEgZ2l2ZW4gc3RyZW5ndGggdG9kYXksIHRoZXkgY2FuIHdvcmsgdG8gZGV2ZWxvcCBpdC4gCgogU3VjaCBsZWFkZXJzIHRha2UgdGhlIHRpbWUgdG8gbWVudG9yIGFuZCBhZHZpc2UuIEluIHByYWN0aWNhbCB0ZXJtcyB0aGlzIG1lYW5zOiAKCiAKCSBMaXN0ZW5pbmcgd2l0aGluLCB0byAgYXJ0aWN1bGF0ZSBhbiBhdXRoZW50aWMgdmlzaW9uIG9mIG92ZXJhbGwgZGlyZWN0aW9uICZyZHF1bzsmcmRxdW87ZnJvbSB0aGUgaGVhcnQgYW5kIHRvIHRoZSBoZWFydCZyZHF1bzsmcmRxdW87dGhhdCBlbmVyZ2l6ZXMgb3RoZXJzIGV2ZW4gYXMgaXQgc2V0cyBjbGVhciBleHBlY3RhdGlvbnMuIAoJIFBheWluZyBhdHRlbnRpb24gdG8gcGVvcGxlJnJzcXVvO3MgZmVlbGluZ3MgYW5kIG5lZWRzLCBhbmQgc2hvd2luZyBjb25jZXJuLiAKCSBMaXN0ZW5pbmcgdG8gYWR2aWNlIGFuZCBleHBlcnRpc2U7IGJlaW5nIGNvbGxhYm9yYXRpdmUgYW5kIG1ha2luZyBkZWNpc2lvbnMgYnkgY29uc2Vuc3VzLiAKCSBDb2FjaGluZywgYmFzZWQgb24gbGlzdGVuaW5nIHRvIHdoYXQgdGhlIHBlcnNvbiB3YW50cyBmcm9tIHRoZWlyIGxpZmUsIGNhcmVlciwgYW5kIGN1cnJlbnQgam9iJmhlbGxpcDsuIAogCgogT2YgY291cnNlIHRoYXQgZG9lc24mcnNxdW87dCBtZWFuIHRoYXQgbGVhZGVycyBjYW4gaWdub3JlIG90aGVyIGNvbmNlcm5zLCBsaWtlIG1hcmtldCB0cmVuZHMgb3IgaW5ub3ZhdGlvbiwgdG8gbWVldCBjaGFuZ2luZyBkZW1hbmRzLiBCdXQgdGhlIHNhbWUgYXR0ZW50aW9uIHNraWxscyB0aGF0IGNhbiBoZWxwIG1hbmFnZSBvbmUmcnNxdW87cyBvd24gZW1vdGlvbnMgYW5kIHdvcmsgcmVsYXRpb25zaGlwcyBjYW4gaGVscCBsZWFkZXJzIHN0YXkgbW9yZSBmbGV4aWJsZSBhbmQgYWxsb3cgZm9yIGJldHRlciBvdXRlciBmb2N1cy4mcmRxdW87wp0iLCJTaW5nbGUgU2VjdGlvbiIsT0xDMTAxMjIzLEFsbCxBbnl0aW1lLCJVbmRlcnN0YW5kaW5nIEJyYWluIFNjaWVuY2UgTWF0dGVycyBpbiBMZWFkZXJzaGlwIERldmVsb3BtZW50IixPTEM0MjAwNDQsMzEvMTIvNDcxMiwzMDAwMDAxNTcwNjIzNDYKLCwsLEFjdGl2ZSwiVUsgTGVnaXNsYXRpb24gJiBDb21wbGlhbmNlIC0gRXhwZXJ0IExlYXJuaW5nIFBhdGgiLE9MQzIyNTk4MSwiVUsgTGVnaXNsYXRpb24gJiBDb21wbGlhbmNlIC0gRXhwZXJ0IExlYXJuaW5nIFBhdGguIiwxNS8wNy8yMDIwLCJVSyBMZWdpc2xhdGlvbiAmIENvbXBsaWFuY2UgLSBFeHBlcnQgTGVhcm5pbmcgUGF0aCIsIkRlZXAtZGl2ZSBpbnRvIEhSIExlZ2lzbGF0aW9uIixPTEMyMjU5ODcsQWxsLEFueXRpbWUsIkluZm9ybWF0aW9uIFByb3RlY3Rpb24gQXdhcmVuZXNzIixPTEM0MjAwOTEsMTUvMDcvMjAyMCwzMDAwMDAyMDUwNTk1OTUKLCwsLEFjdGl2ZSwiVUsgTGVnaXNsYXRpb24gJiBDb21wbGlhbmNlIC0gRXhwZXJ0IExlYXJuaW5nIFBhdGgiLE9MQzIyNTk4MSwiVUsgTGVnaXNsYXRpb24gJiBDb21wbGlhbmNlIC0gRXhwZXJ0IExlYXJuaW5nIFBhdGguIiwxNS8wNy8yMDIwLCJVSyBMZWdpc2xhdGlvbiAmIENvbXBsaWFuY2UgLSBFeHBlcnQgTGVhcm5pbmcgUGF0aCIsIkRlZXAtZGl2ZSBpbnRvIEhSIExlZ2lzbGF0aW9uIixPTEMyMjU5ODcsQWxsLEFueXRpbWUsIlNvY2lhbCBEaXN0YW5jaW5nIGluIHRoZSBXb3JrcGxhY2UgYW5kIEh5Z2llbmUgQmVzdCBQcmFjdGljZXMiLE9MQzQyMDA5NCwxNS8wNy8yMDIwLDMwMDAwMDIwNTA1OTU5NQosLCwsQWN0aXZlLCJVSyBMZWdpc2xhdGlvbiAmIENvbXBsaWFuY2UgLSBFeHBlcnQgTGVhcm5pbmcgUGF0aCIsT0xDMjI1OTgxLCJVSyBMZWdpc2xhdGlvbiAmIENvbXBsaWFuY2UgLSBFeHBlcnQgTGVhcm5pbmcgUGF0aC4iLDE1LzA3LzIwMjAsIlVLIExlZ2lzbGF0aW9uICYgQ29tcGxpYW5jZSAtIEV4cGVydCBMZWFybmluZyBQYXRoIiwiR0RQUiBGdWxsIENvbXBsaWFuY2UiLE9MQzIyNTk4OCxBbGwsQW55dGltZSwiSW50cm9kdWN0aW9uIHRvIERpdmVyc2l0eSwgSW5jbHVzaW9uIGFuZCBFcXVpdHkiLE9MQzQyMDA5MiwxNS8wNy8yMDIwLDMwMDAwMDIwNTA1OTU5NQosLCwsQWN0aXZlLCJVSyBMZWdpc2xhdGlvbiAmIENvbXBsaWFuY2UgLSBFeHBlcnQgTGVhcm5pbmcgUGF0aCIsT0xDMjI1OTgxLCJVSyBMZWdpc2xhdGlvbiAmIENvbXBsaWFuY2UgLSBFeHBlcnQgTGVhcm5pbmcgUGF0aC4iLDE1LzA3LzIwMjAsIlVLIExlZ2lzbGF0aW9uICYgQ29tcGxpYW5jZSAtIEV4cGVydCBMZWFybmluZyBQYXRoIiwiR0RQUiBGdWxsIENvbXBsaWFuY2UiLE9MQzIyNTk4OCxBbGwsQW55dGltZSwiU2V4dWFsIEhhcmFzc21lbnQgVHJhaW5pbmcgZm9yIHRoZSBNb2Rlcm4gV29ya3BsYWNlIixPTEM0MjAwOTMsMTUvMDcvMjAyMCwzMDAwMDAyMDUwNTk1OTUKLCwsLEFjdGl2ZSwiVUsgTGVnaXNsYXRpb24gJiBDb21wbGlhbmNlIC0gRXhwZXJ0IExlYXJuaW5nIFBhdGgiLE9MQzIyNTk4MSwiVUsgTGVnaXNsYXRpb24gJiBDb21wbGlhbmNlIC0gRXhwZXJ0IExlYXJuaW5nIFBhdGguIiwxNS8wNy8yMDIwLCJVSyBMZWdpc2xhdGlvbiAmIENvbXBsaWFuY2UgLSBFeHBlcnQgTGVhcm5pbmcgUGF0aCIsUG9zdC1Bc3Nlc3NtZW50LE9MQzIyNTk4OSxBbGwsQW55dGltZSwiTGVhZGVyc2hpcCAtIFRlc3QgT3V0IixPTEM0MjAwODksMTUvMDcvMjAyMCwzMDAwMDAyMDUwNTk1OTUKLCwsLEFjdGl2ZSwiVUsgTGVnaXNsYXRpb24gJiBDb21wbGlhbmNlIC0gRXhwZXJ0IExlYXJuaW5nIFBhdGgiLE9MQzIyNTk4MSwiVUsgTGVnaXNsYXRpb24gJiBDb21wbGlhbmNlIC0gRXhwZXJ0IExlYXJuaW5nIFBhdGguIiwxNS8wNy8yMDIwLCJVSyBMZWdpc2xhdGlvbiAmIENvbXBsaWFuY2UgLSBFeHBlcnQgTGVhcm5pbmcgUGF0aCIsIlBvc3QtQnJleGl0OiBXaGF0IGlzIG5leHQ/IixPTEMyMjU5ODYsQWxsLEFueXRpbWUsIkFudGkgQ29ycnVwdGlvbiBhbmQgQnJpYmVyeSBDb21wbGlhbmNlIixPTEM0MjAwOTAsMTUvMDcvMjAyMCwzMDAwMDAyMDUwNTk1OTUKLCwsLEFjdGl2ZSwiV2VsY29tZSB0byB0aGUgT3JnYW5pemF0aW9uIixPTEMyMTMwMTAsIk5ldyBIaXJlIFNwZWNpYWxpemF0aW9uIiwwMS8wMS8yMDIwLCJXaGVuIGpvaW5pbmcgYW4gb3JnYW5pemF0aW9uLCBuZXcgaGlyZXMgZXhwZWN0IHRvIHJlY2VpdmUgYWRlcXVhdGUgdHJhaW5pbmcsIHNhZmUgd29ya2luZyBjb25kaXRpb25zLCBhIGZ1bGwgZXhwbGFuYXRpb24gb2YgYWxsIGNvbXBhbnkgcG9saWNpZXMsIGFuZCBlc3BlY2lhbGx5IG9mIHRoZSBqb2IgcmVzcG9uc2liaWxpdGllcywgYW5kIGZhaXIgYW5kIGNvbnN0cnVjdGl2ZSBmZWVkYmFjayBmcm9tIHRoZWlyIG1hbmFnZXIuIFRoaXMgc3BlY2lhbGl6YXRpb24gZ2F0aGVycyBhbGwgdGhpcyBpbiBvbmUgcGxhY2UuIiwiQ29tcGFueSBPcGVyYXRpb25zIixPTEMyMTMwMTUsQWxsLEFueXRpbWUsIkluZm9ybWF0aW9uIFByb3RlY3Rpb24gLSBWaWRlbyIsT0xDNDIwMDk4LDMxLzEyLzQ3MTIsMzAwMDAwMjA0MTMyNjI2CiwsLCxBY3RpdmUsIldlbGNvbWUgdG8gdGhlIE9yZ2FuaXphdGlvbiIsT0xDMjEzMDEwLCJOZXcgSGlyZSBTcGVjaWFsaXphdGlvbiIsMDEvMDEvMjAyMCwiV2hlbiBqb2luaW5nIGFuIG9yZ2FuaXphdGlvbiwgbmV3IGhpcmVzIGV4cGVjdCB0byByZWNlaXZlIGFkZXF1YXRlIHRyYWluaW5nLCBzYWZlIHdvcmtpbmcgY29uZGl0aW9ucywgYSBmdWxsIGV4cGxhbmF0aW9uIG9mIGFsbCBjb21wYW55IHBvbGljaWVzLCBhbmQgZXNwZWNpYWxseSBvZiB0aGUgam9iIHJlc3BvbnNpYmlsaXRpZXMsIGFuZCBmYWlyIGFuZCBjb25zdHJ1Y3RpdmUgZmVlZGJhY2sgZnJvbSB0aGVpciBtYW5hZ2VyLiBUaGlzIHNwZWNpYWxpemF0aW9uIGdhdGhlcnMgYWxsIHRoaXMgaW4gb25lIHBsYWNlLiIsIkNvbXBhbnkgT3BlcmF0aW9ucyIsT0xDMjEzMDE1LEFsbCxBbnl0aW1lLCJLbm93bGVkZ2UgQ2hlY2sgLSBBc3Nlc3NtZW50IixPTEM0MjAxMDEsMzEvMTIvNDcxMiwzMDAwMDAyMDQxMzI2MjYKLCwsLEFjdGl2ZSwiV2VsY29tZSB0byB0aGUgT3JnYW5pemF0aW9uIixPTEMyMTMwMTAsIk5ldyBIaXJlIFNwZWNpYWxpemF0aW9uIiwwMS8wMS8yMDIwLCJXaGVuIGpvaW5pbmcgYW4gb3JnYW5pemF0aW9uLCBuZXcgaGlyZXMgZXhwZWN0IHRvIHJlY2VpdmUgYWRlcXVhdGUgdHJhaW5pbmcsIHNhZmUgd29ya2luZyBjb25kaXRpb25zLCBhIGZ1bGwgZXhwbGFuYXRpb24gb2YgYWxsIGNvbXBhbnkgcG9saWNpZXMsIGFuZCBlc3BlY2lhbGx5IG9mIHRoZSBqb2IgcmVzcG9uc2liaWxpdGllcywgYW5kIGZhaXIgYW5kIGNvbnN0cnVjdGl2ZSBmZWVkYmFjayBmcm9tIHRoZWlyIG1hbmFnZXIuIFRoaXMgc3BlY2lhbGl6YXRpb24gZ2F0aGVycyBhbGwgdGhpcyBpbiBvbmUgcGxhY2UuIiwiQ29tcGFueSBPcGVyYXRpb25zIixPTEMyMTMwMTUsQWxsLEFueXRpbWUsIk91ciBQcm9kdWN0cyBhbmQgU2VydmljZXMgLSBWSUxUIixPTEM0MjAxMDAsMzEvMTIvNDcxMiwzMDAwMDAyMDQxMzI2MjYKLCwsLEFjdGl2ZSwiV2VsY29tZSB0byB0aGUgT3JnYW5pemF0aW9uIixPTEMyMTMwMTAsIk5ldyBIaXJlIFNwZWNpYWxpemF0aW9uIiwwMS8wMS8yMDIwLCJXaGVuIGpvaW5pbmcgYW4gb3JnYW5pemF0aW9uLCBuZXcgaGlyZXMgZXhwZWN0IHRvIHJlY2VpdmUgYWRlcXVhdGUgdHJhaW5pbmcsIHNhZmUgd29ya2luZyBjb25kaXRpb25zLCBhIGZ1bGwgZXhwbGFuYXRpb24gb2YgYWxsIGNvbXBhbnkgcG9saWNpZXMsIGFuZCBlc3BlY2lhbGx5IG9mIHRoZSBqb2IgcmVzcG9uc2liaWxpdGllcywgYW5kIGZhaXIgYW5kIGNvbnN0cnVjdGl2ZSBmZWVkYmFjayBmcm9tIHRoZWlyIG1hbmFnZXIuIFRoaXMgc3BlY2lhbGl6YXRpb24gZ2F0aGVycyBhbGwgdGhpcyBpbiBvbmUgcGxhY2UuIiwiQ29tcGFueSBPcGVyYXRpb25zIixPTEMyMTMwMTUsQWxsLEFueXRpbWUsIlRpbWUgTWFuYWdlbWVudCBGdW5kYW1lbnRhbHMgLSBMaW5rZWRJbiBMZWFybmluZyIsT0xDNDIwMTA3LDMxLzEyLzQ3MTIsMzAwMDAwMjA0MTMyNjI2CiwsLCxBY3RpdmUsIldlbGNvbWUgdG8gdGhlIE9yZ2FuaXphdGlvbiIsT0xDMjEzMDEwLCJOZXcgSGlyZSBTcGVjaWFsaXphdGlvbiIsMDEvMDEvMjAyMCwiV2hlbiBqb2luaW5nIGFuIG9yZ2FuaXphdGlvbiwgbmV3IGhpcmVzIGV4cGVjdCB0byByZWNlaXZlIGFkZXF1YXRlIHRyYWluaW5nLCBzYWZlIHdvcmtpbmcgY29uZGl0aW9ucywgYSBmdWxsIGV4cGxhbmF0aW9uIG9mIGFsbCBjb21wYW55IHBvbGljaWVzLCBhbmQgZXNwZWNpYWxseSBvZiB0aGUgam9iIHJlc3BvbnNpYmlsaXRpZXMsIGFuZCBmYWlyIGFuZCBjb25zdHJ1Y3RpdmUgZmVlZGJhY2sgZnJvbSB0aGVpciBtYW5hZ2VyLiBUaGlzIHNwZWNpYWxpemF0aW9uIGdhdGhlcnMgYWxsIHRoaXMgaW4gb25lIHBsYWNlLiIsIkNvbXBhbnkgT3BlcmF0aW9ucyIsT0xDMjEzMDE1LEFsbCxBbnl0aW1lLCJWYWx1aW5nIERpdmVyc2l0eSAtIFNDT1JNIixPTEM0MjAwOTksMzEvMTIvNDcxMiwzMDAwMDAyMDQxMzI2MjYKLCwsLEFjdGl2ZSwiV2VsY29tZSB0byB0aGUgT3JnYW5pemF0aW9uIixPTEMyMTMwMTAsIk5ldyBIaXJlIFNwZWNpYWxpemF0aW9uIiwwMS8wMS8yMDIwLCJXaGVuIGpvaW5pbmcgYW4gb3JnYW5pemF0aW9uLCBuZXcgaGlyZXMgZXhwZWN0IHRvIHJlY2VpdmUgYWRlcXVhdGUgdHJhaW5pbmcsIHNhZmUgd29ya2luZyBjb25kaXRpb25zLCBhIGZ1bGwgZXhwbGFuYXRpb24gb2YgYWxsIGNvbXBhbnkgcG9saWNpZXMsIGFuZCBlc3BlY2lhbGx5IG9mIHRoZSBqb2IgcmVzcG9uc2liaWxpdGllcywgYW5kIGZhaXIgYW5kIGNvbnN0cnVjdGl2ZSBmZWVkYmFjayBmcm9tIHRoZWlyIG1hbmFnZXIuIFRoaXMgc3BlY2lhbGl6YXRpb24gZ2F0aGVycyBhbGwgdGhpcyBpbiBvbmUgcGxhY2UuIixGZWVkYmFjayxPTEMyNTExMTAsQWxsLEFueXRpbWUsIkhvdyB3YXMgeW91ciBvbmJvYXJkaW5nIGV4cGVyaWVuY2U/IixPTEM0MjAxMDQsMzEvMTIvNDcxMiwzMDAwMDAyMDQxMzI2MjYKLCwsLEFjdGl2ZSwiV2VsY29tZSB0byB0aGUgT3JnYW5pemF0aW9uIixPTEMyMTMwMTAsIk5ldyBIaXJlIFNwZWNpYWxpemF0aW9uIiwwMS8wMS8yMDIwLCJXaGVuIGpvaW5pbmcgYW4gb3JnYW5pemF0aW9uLCBuZXcgaGlyZXMgZXhwZWN0IHRvIHJlY2VpdmUgYWRlcXVhdGUgdHJhaW5pbmcsIHNhZmUgd29ya2luZyBjb25kaXRpb25zLCBhIGZ1bGwgZXhwbGFuYXRpb24gb2YgYWxsIGNvbXBhbnkgcG9saWNpZXMsIGFuZCBlc3BlY2lhbGx5IG9mIHRoZSBqb2IgcmVzcG9uc2liaWxpdGllcywgYW5kIGZhaXIgYW5kIGNvbnN0cnVjdGl2ZSBmZWVkYmFjayBmcm9tIHRoZWlyIG1hbmFnZXIuIFRoaXMgc3BlY2lhbGl6YXRpb24gZ2F0aGVycyBhbGwgdGhpcyBpbiBvbmUgcGxhY2UuIiwiTWFpbnRhaW5pbmcgSGVhbHRoIGFuZCBTYWZldHkgaW4gdGhlIFdvcmtwbGFjZSIsT0xDMjEzMDE0LEFsbCxBbnl0aW1lLCJDb21wYW55IFBhbmRlbWljIEF3YXJlbmVzcyBSZXNvdXJjZSBQYWdlIixPTEM0MjAxMDUsMzEvMTIvNDcxMiwzMDAwMDAyMDQxMzI2MjYKLCwsLEFjdGl2ZSwiV2VsY29tZSB0byB0aGUgT3JnYW5pemF0aW9uIixPTEMyMTMwMTAsIk5ldyBIaXJlIFNwZWNpYWxpemF0aW9uIiwwMS8wMS8yMDIwLCJXaGVuIGpvaW5pbmcgYW4gb3JnYW5pemF0aW9uLCBuZXcgaGlyZXMgZXhwZWN0IHRvIHJlY2VpdmUgYWRlcXVhdGUgdHJhaW5pbmcsIHNhZmUgd29ya2luZyBjb25kaXRpb25zLCBhIGZ1bGwgZXhwbGFuYXRpb24gb2YgYWxsIGNvbXBhbnkgcG9saWNpZXMsIGFuZCBlc3BlY2lhbGx5IG9mIHRoZSBqb2IgcmVzcG9uc2liaWxpdGllcywgYW5kIGZhaXIgYW5kIGNvbnN0cnVjdGl2ZSBmZWVkYmFjayBmcm9tIHRoZWlyIG1hbmFnZXIuIFRoaXMgc3BlY2lhbGl6YXRpb24gZ2F0aGVycyBhbGwgdGhpcyBpbiBvbmUgcGxhY2UuIiwiTWFpbnRhaW5pbmcgSGVhbHRoIGFuZCBTYWZldHkgaW4gdGhlIFdvcmtwbGFjZSIsT0xDMjEzMDE0LEFsbCxBbnl0aW1lLCJFcmdvbm9taWNzIGluIHRoZSBXb3JrcGxhY2UgLSBQREYiLE9MQzQyMDEwMywzMS8xMi80NzEyLDMwMDAwMDIwNDEzMjYyNgosLCwsQWN0aXZlLCJXZWxjb21lIHRvIHRoZSBPcmdhbml6YXRpb24iLE9MQzIxMzAxMCwiTmV3IEhpcmUgU3BlY2lhbGl6YXRpb24iLDAxLzAxLzIwMjAsIldoZW4gam9pbmluZyBhbiBvcmdhbml6YXRpb24sIG5ldyBoaXJlcyBleHBlY3QgdG8gcmVjZWl2ZSBhZGVxdWF0ZSB0cmFpbmluZywgc2FmZSB3b3JraW5nIGNvbmRpdGlvbnMsIGEgZnVsbCBleHBsYW5hdGlvbiBvZiBhbGwgY29tcGFueSBwb2xpY2llcywgYW5kIGVzcGVjaWFsbHkgb2YgdGhlIGpvYiByZXNwb25zaWJpbGl0aWVzLCBhbmQgZmFpciBhbmQgY29uc3RydWN0aXZlIGZlZWRiYWNrIGZyb20gdGhlaXIgbWFuYWdlci4gVGhpcyBzcGVjaWFsaXphdGlvbiBnYXRoZXJzIGFsbCB0aGlzIGluIG9uZSBwbGFjZS4iLCJNYWludGFpbmluZyBIZWFsdGggYW5kIFNhZmV0eSBpbiB0aGUgV29ya3BsYWNlIixPTEMyMTMwMTQsQWxsLEFueXRpbWUsIkZpcnN0IEFpZCAtIEhBQ1AiLE9MQzQyMDEwMiwzMS8xMi80NzEyLDMwMDAwMDIwNDEzMjYyNgosLCwsQWN0aXZlLCJXZWxjb21lIHRvIHRoZSBPcmdhbml6YXRpb24iLE9MQzIxMzAxMCwiTmV3IEhpcmUgU3BlY2lhbGl6YXRpb24iLDAxLzAxLzIwMjAsIldoZW4gam9pbmluZyBhbiBvcmdhbml6YXRpb24sIG5ldyBoaXJlcyBleHBlY3QgdG8gcmVjZWl2ZSBhZGVxdWF0ZSB0cmFpbmluZywgc2FmZSB3b3JraW5nIGNvbmRpdGlvbnMsIGEgZnVsbCBleHBsYW5hdGlvbiBvZiBhbGwgY29tcGFueSBwb2xpY2llcywgYW5kIGVzcGVjaWFsbHkgb2YgdGhlIGpvYiByZXNwb25zaWJpbGl0aWVzLCBhbmQgZmFpciBhbmQgY29uc3RydWN0aXZlIGZlZWRiYWNrIGZyb20gdGhlaXIgbWFuYWdlci4gVGhpcyBzcGVjaWFsaXphdGlvbiBnYXRoZXJzIGFsbCB0aGlzIGluIG9uZSBwbGFjZS4iLCJQb2xpY2llcyBhbmQgUHJvY2VkdXJlcyAiLE9MQzIxMzAxMyxBbGwsQW55dGltZSwiRW1wbG95ZWUgSGFuZGJvb2sgLSBQREYiLE9MQzQyMDA5NiwzMS8xMi80NzEyLDMwMDAwMDIwNDEzMjYyNgosLCwsQWN0aXZlLCJXZWxjb21lIHRvIHRoZSBPcmdhbml6YXRpb24iLE9MQzIxMzAxMCwiTmV3IEhpcmUgU3BlY2lhbGl6YXRpb24iLDAxLzAxLzIwMjAsIldoZW4gam9pbmluZyBhbiBvcmdhbml6YXRpb24sIG5ldyBoaXJlcyBleHBlY3QgdG8gcmVjZWl2ZSBhZGVxdWF0ZSB0cmFpbmluZywgc2FmZSB3b3JraW5nIGNvbmRpdGlvbnMsIGEgZnVsbCBleHBsYW5hdGlvbiBvZiBhbGwgY29tcGFueSBwb2xpY2llcywgYW5kIGVzcGVjaWFsbHkgb2YgdGhlIGpvYiByZXNwb25zaWJpbGl0aWVzLCBhbmQgZmFpciBhbmQgY29uc3RydWN0aXZlIGZlZWRiYWNrIGZyb20gdGhlaXIgbWFuYWdlci4gVGhpcyBzcGVjaWFsaXphdGlvbiBnYXRoZXJzIGFsbCB0aGlzIGluIG9uZSBwbGFjZS4iLCJQb2xpY2llcyBhbmQgUHJvY2VkdXJlcyAiLE9MQzIxMzAxMyxBbGwsQW55dGltZSwiSFIgSW5kdWN0aW9uIC0gVklMVCIsT0xDNDIwMDcyLDMxLzEyLzQ3MTIsMzAwMDAwMjA0MTMyNjI2CiwsLCxBY3RpdmUsIldlbGNvbWUgdG8gdGhlIE9yZ2FuaXphdGlvbiIsT0xDMjEzMDEwLCJOZXcgSGlyZSBTcGVjaWFsaXphdGlvbiIsMDEvMDEvMjAyMCwiV2hlbiBqb2luaW5nIGFuIG9yZ2FuaXphdGlvbiwgbmV3IGhpcmVzIGV4cGVjdCB0byByZWNlaXZlIGFkZXF1YXRlIHRyYWluaW5nLCBzYWZlIHdvcmtpbmcgY29uZGl0aW9ucywgYSBmdWxsIGV4cGxhbmF0aW9uIG9mIGFsbCBjb21wYW55IHBvbGljaWVzLCBhbmQgZXNwZWNpYWxseSBvZiB0aGUgam9iIHJlc3BvbnNpYmlsaXRpZXMsIGFuZCBmYWlyIGFuZCBjb25zdHJ1Y3RpdmUgZmVlZGJhY2sgZnJvbSB0aGVpciBtYW5hZ2VyLiBUaGlzIHNwZWNpYWxpemF0aW9uIGdhdGhlcnMgYWxsIHRoaXMgaW4gb25lIHBsYWNlLiIsIlBvbGljaWVzIGFuZCBQcm9jZWR1cmVzICIsT0xDMjEzMDEzLEFsbCxBbnl0aW1lLCJSZW1vdGUgV29ya2luZyAtIEhBQ1AiLE9MQzQyMDA5NywzMS8xMi80NzEyLDMwMDAwMDIwNDEzMjYyNgosLCwsQWN0aXZlLCJXb3JraW5nIEZyb20gSG9tZSBHdWlkZWxpbmVzIGFuZCBUaXBzIixPTEMxOTY5NDQsIkhlbHAgdHJhbnNpdGlvbmluZyB0byB3b3JraW5nIGZyb20gaG9tZSIsMTUvMDQvMjAyMCwiVG9vbHMsIHRpcHMsIGd1aWRlbGluZXMgYW5kIHJlc291cmNlcyBmb3IgYXNzaXN0aW5nIGVtcGxveWVlcyB3aXRoIHRyYW5zaXRpb25pbmcgdG8gdGhlIFdvcmstRnJvbS1Ib21lIHBhcmFkaWdtLCBhcyBidXNpbmVzcyBhbmQgc29jaWFsIGlzc3VlcyBuZWNlc3NpdGF0ZSB0aGUgbmVlZCB0byBkbyBzby4iLCJBZGRpdGlvbmFsIFJlc291cmNlcyIsT0xDMTk2OTQ4LDAsQW55dGltZSwiV29ya2luZyBGcm9tIEhvbWUgUmVzb3VyY2VzIixPTEM0MjAwNjEsMzEvMTIvNDcxMiwzMDAwMDAyMDExODgzNTIKLCwsLEFjdGl2ZSwiV29ya2luZyBGcm9tIEhvbWUgR3VpZGVsaW5lcyBhbmQgVGlwcyIsT0xDMTk2OTQ0LCJIZWxwIHRyYW5zaXRpb25pbmcgdG8gd29ya2luZyBmcm9tIGhvbWUiLDE1LzA0LzIwMjAsIlRvb2xzLCB0aXBzLCBndWlkZWxpbmVzIGFuZCByZXNvdXJjZXMgZm9yIGFzc2lzdGluZyBlbXBsb3llZXMgd2l0aCB0cmFuc2l0aW9uaW5nIHRvIHRoZSBXb3JrLUZyb20tSG9tZSBwYXJhZGlnbSwgYXMgYnVzaW5lc3MgYW5kIHNvY2lhbCBpc3N1ZXMgbmVjZXNzaXRhdGUgdGhlIG5lZWQgdG8gZG8gc28uIiwiR3VpZGVsaW5lcyBhbmQgVGlwcyIsT0xDMTk2OTQ3LDMsQW55dGltZSwiQmUgQWN0aXZlIixPTEM0MjAwNjUsMzEvMTIvNDcxMiwzMDAwMDAyMDExODgzNTIKLCwsLEFjdGl2ZSwiV29ya2luZyBGcm9tIEhvbWUgR3VpZGVsaW5lcyBhbmQgVGlwcyIsT0xDMTk2OTQ0LCJIZWxwIHRyYW5zaXRpb25pbmcgdG8gd29ya2luZyBmcm9tIGhvbWUiLDE1LzA0LzIwMjAsIlRvb2xzLCB0aXBzLCBndWlkZWxpbmVzIGFuZCByZXNvdXJjZXMgZm9yIGFzc2lzdGluZyBlbXBsb3llZXMgd2l0aCB0cmFuc2l0aW9uaW5nIHRvIHRoZSBXb3JrLUZyb20tSG9tZSBwYXJhZGlnbSwgYXMgYnVzaW5lc3MgYW5kIHNvY2lhbCBpc3N1ZXMgbmVjZXNzaXRhdGUgdGhlIG5lZWQgdG8gZG8gc28uIiwiR3VpZGVsaW5lcyBhbmQgVGlwcyIsT0xDMTk2OTQ3LDMsQW55dGltZSwiQmVpbmcgUHJvZHVjdGl2ZSBXaGVuIFdvcmtpbmcgZnJvbSBIb21lIixPTEM0MjAwNjAsMzEvMTIvNDcxMiwzMDAwMDAyMDExODgzNTIKLCwsLEFjdGl2ZSwiV29ya2luZyBGcm9tIEhvbWUgR3VpZGVsaW5lcyBhbmQgVGlwcyIsT0xDMTk2OTQ0LCJIZWxwIHRyYW5zaXRpb25pbmcgdG8gd29ya2luZyBmcm9tIGhvbWUiLDE1LzA0LzIwMjAsIlRvb2xzLCB0aXBzLCBndWlkZWxpbmVzIGFuZCByZXNvdXJjZXMgZm9yIGFzc2lzdGluZyBlbXBsb3llZXMgd2l0aCB0cmFuc2l0aW9uaW5nIHRvIHRoZSBXb3JrLUZyb20tSG9tZSBwYXJhZGlnbSwgYXMgYnVzaW5lc3MgYW5kIHNvY2lhbCBpc3N1ZXMgbmVjZXNzaXRhdGUgdGhlIG5lZWQgdG8gZG8gc28uIiwiR3VpZGVsaW5lcyBhbmQgVGlwcyIsT0xDMTk2OTQ3LDMsQW55dGltZSwiTWF4aW1pemluZyBWaXJ0dWFsIFRvb2xzIixPTEM0MjAwNTksMzEvMTIvNDcxMiwzMDAwMDAyMDExODgzNTIKLCwsLEFjdGl2ZSwiV29ya2luZyBGcm9tIEhvbWUgR3VpZGVsaW5lcyBhbmQgVGlwcyIsT0xDMTk2OTQ0LCJIZWxwIHRyYW5zaXRpb25pbmcgdG8gd29ya2luZyBmcm9tIGhvbWUiLDE1LzA0LzIwMjAsIlRvb2xzLCB0aXBzLCBndWlkZWxpbmVzIGFuZCByZXNvdXJjZXMgZm9yIGFzc2lzdGluZyBlbXBsb3llZXMgd2l0aCB0cmFuc2l0aW9uaW5nIHRvIHRoZSBXb3JrLUZyb20tSG9tZSBwYXJhZGlnbSwgYXMgYnVzaW5lc3MgYW5kIHNvY2lhbCBpc3N1ZXMgbmVjZXNzaXRhdGUgdGhlIG5lZWQgdG8gZG8gc28uIiwiR3VpZGVsaW5lcyBhbmQgVGlwcyIsT0xDMTk2OTQ3LDMsQW55dGltZSwiUmFpc2luZyBSZXNpbGllbmN5OiBCdWlsZCBUb2xlcmFuY2UgZm9yIFN0cmVzcyIsT0xDNDIwMDY0LDMxLzEyLzQ3MTIsMzAwMDAwMjAxMTg4MzUyCiwsLCxBY3RpdmUsIldvcmtpbmcgRnJvbSBIb21lIEd1aWRlbGluZXMgYW5kIFRpcHMiLE9MQzE5Njk0NCwiSGVscCB0cmFuc2l0aW9uaW5nIHRvIHdvcmtpbmcgZnJvbSBob21lIiwxNS8wNC8yMDIwLCJUb29scywgdGlwcywgZ3VpZGVsaW5lcyBhbmQgcmVzb3VyY2VzIGZvciBhc3Npc3RpbmcgZW1wbG95ZWVzIHdpdGggdHJhbnNpdGlvbmluZyB0byB0aGUgV29yay1Gcm9tLUhvbWUgcGFyYWRpZ20sIGFzIGJ1c2luZXNzIGFuZCBzb2NpYWwgaXNzdWVzIG5lY2Vzc2l0YXRlIHRoZSBuZWVkIHRvIGRvIHNvLiIsIkd1aWRlbGluZXMgYW5kIFRpcHMiLE9MQzE5Njk0NywzLEFueXRpbWUsIldvcmtpbmcgRnJvbSBIb21lIOKAkyBCYXNpYyBTZXQgVXAgIixPTEM0MjAwNTgsMzEvMTIvNDcxMiwzMDAwMDAyMDExODgzNTIKLCwsLEFjdGl2ZSwiV29ya3BsYWNlIFNhZmV0eSIsT0xDMTAyMDAxLCJFbnJvbGwgaW4gdGhpcyBTcGVjaWFsaXphdGlvbiB0byBsZWFybiBza2lsbHMgYW5kIGRldmVsb3AgdmFsdWFibGUga25vd2xlZGdlIGluIGtleSBhc3BlY3RzIG9mIFdvcmtwbGFjZSBTYWZldHkuIiwwMS8xMS8yMDE2LCJJbiB0aGlzIHNwZWNpYWxpemF0aW9uLCB5b3Ugd2lsbCBsZWFybiBza2lsbHMgYW5kIGRldmVsb3AgdmFsdWFibGUga25vd2xlZGdlIGluIFdvcmtwbGFjZSBTYWZldHksIGVuYWJsaW5nIGJvdGggeW91IGFuZCB5b3VyIGNvLXdvcmtlcnMgdG8gd29yayBpbiBhIHNhZmUgYW5kIHByb2R1Y3RpdmUgZW52aXJvbm1lbnQuIApZb3Ugd2lsbCBjb3ZlciBzdWJqZWN0czogCiAKCSAgSGFuZGxpbmcgSGF6YXJkb3VzIE1hdGVyaWFscyAgCgkgIFdvcmtwbGFjZSBGaXJzdCBBaWQgIAoJICBGaXJlIFNhZmV0eSwgYW5kICAKCSAgV29ya3BsYWNlIEVyZ29ub21pY3MiLCJIYXphcmRvdXMgTWF0ZXJpYWxzIGFuZCBGaXJlIFNhZmV0eSIsT0xDMTAwMzQ1LEFsbCxBbnl0aW1lLCJGaXJlIFNhZmV0eSIsT0xDNDIwMDMwLDMxLzEyLzQ3MTIsMzAwMDAwMTMzOTcxMTkzCiwsLCxBY3RpdmUsIldvcmtwbGFjZSBTYWZldHkiLE9MQzEwMjAwMSwiRW5yb2xsIGluIHRoaXMgU3BlY2lhbGl6YXRpb24gdG8gbGVhcm4gc2tpbGxzIGFuZCBkZXZlbG9wIHZhbHVhYmxlIGtub3dsZWRnZSBpbiBrZXkgYXNwZWN0cyBvZiBXb3JrcGxhY2UgU2FmZXR5LiIsMDEvMTEvMjAxNiwiSW4gdGhpcyBzcGVjaWFsaXphdGlvbiwgeW91IHdpbGwgbGVhcm4gc2tpbGxzIGFuZCBkZXZlbG9wIHZhbHVhYmxlIGtub3dsZWRnZSBpbiBXb3JrcGxhY2UgU2FmZXR5LCBlbmFibGluZyBib3RoIHlvdSBhbmQgeW91ciBjby13b3JrZXJzIHRvIHdvcmsgaW4gYSBzYWZlIGFuZCBwcm9kdWN0aXZlIGVudmlyb25tZW50LiAKWW91IHdpbGwgY292ZXIgc3ViamVjdHM6IAogCgkgIEhhbmRsaW5nIEhhemFyZG91cyBNYXRlcmlhbHMgIAoJICBXb3JrcGxhY2UgRmlyc3QgQWlkICAKCSAgRmlyZSBTYWZldHksIGFuZCAgCgkgIFdvcmtwbGFjZSBFcmdvbm9taWNzIiwiSGF6YXJkb3VzIE1hdGVyaWFscyBhbmQgRmlyZSBTYWZldHkiLE9MQzEwMDM0NSxBbGwsQW55dGltZSwiSGFuZGxpbmcgSGF6YXJkb3VzIE1hdGVyaWFscyIsT0xDNDIwMDI2LDMxLzEyLzQ3MTIsMzAwMDAwMTMzOTcxMTkzCiwsLCxBY3RpdmUsIldvcmtwbGFjZSBTYWZldHkiLE9MQzEwMjAwMSwiRW5yb2xsIGluIHRoaXMgU3BlY2lhbGl6YXRpb24gdG8gbGVhcm4gc2tpbGxzIGFuZCBkZXZlbG9wIHZhbHVhYmxlIGtub3dsZWRnZSBpbiBrZXkgYXNwZWN0cyBvZiBXb3JrcGxhY2UgU2FmZXR5LiIsMDEvMTEvMjAxNiwiSW4gdGhpcyBzcGVjaWFsaXphdGlvbiwgeW91IHdpbGwgbGVhcm4gc2tpbGxzIGFuZCBkZXZlbG9wIHZhbHVhYmxlIGtub3dsZWRnZSBpbiBXb3JrcGxhY2UgU2FmZXR5LCBlbmFibGluZyBib3RoIHlvdSBhbmQgeW91ciBjby13b3JrZXJzIHRvIHdvcmsgaW4gYSBzYWZlIGFuZCBwcm9kdWN0aXZlIGVudmlyb25tZW50LiAKWW91IHdpbGwgY292ZXIgc3ViamVjdHM6IAogCgkgIEhhbmRsaW5nIEhhemFyZG91cyBNYXRlcmlhbHMgIAoJICBXb3JrcGxhY2UgRmlyc3QgQWlkICAKCSAgRmlyZSBTYWZldHksIGFuZCAgCgkgIFdvcmtwbGFjZSBFcmdvbm9taWNzIiwiSGVhbHRoeSBXb3JrcGxhY2VzIixPTEMxMDAzNDYsMSxBbnl0aW1lLCJFcmdvbm9taWNzIGluIHRoZSBXb3JrcGxhY2UgLSBQREYiLE9MQzQyMDAzMSwzMS8xMi80NzEyLDMwMDAwMDEzMzk3MTE5MwosLCwsQWN0aXZlLCJXb3JrcGxhY2UgU2FmZXR5IixPTEMxMDIwMDEsIkVucm9sbCBpbiB0aGlzIFNwZWNpYWxpemF0aW9uIHRvIGxlYXJuIHNraWxscyBhbmQgZGV2ZWxvcCB2YWx1YWJsZSBrbm93bGVkZ2UgaW4ga2V5IGFzcGVjdHMgb2YgV29ya3BsYWNlIFNhZmV0eS4iLDAxLzExLzIwMTYsIkluIHRoaXMgc3BlY2lhbGl6YXRpb24sIHlvdSB3aWxsIGxlYXJuIHNraWxscyBhbmQgZGV2ZWxvcCB2YWx1YWJsZSBrbm93bGVkZ2UgaW4gV29ya3BsYWNlIFNhZmV0eSwgZW5hYmxpbmcgYm90aCB5b3UgYW5kIHlvdXIgY28td29ya2VycyB0byB3b3JrIGluIGEgc2FmZSBhbmQgcHJvZHVjdGl2ZSBlbnZpcm9ubWVudC4gCllvdSB3aWxsIGNvdmVyIHN1YmplY3RzOiAKIAoJICBIYW5kbGluZyBIYXphcmRvdXMgTWF0ZXJpYWxzICAKCSAgV29ya3BsYWNlIEZpcnN0IEFpZCAgCgkgIEZpcmUgU2FmZXR5LCBhbmQgIAoJICBXb3JrcGxhY2UgRXJnb25vbWljcyIsIkhlYWx0aHkgV29ya3BsYWNlcyIsT0xDMTAwMzQ2LDEsQW55dGltZSwiV29ya3BsYWNlIEZpcnN0IEFpZCIsT0xDNDIwMDI3LDMxLzEyLzQ3MTIsMzAwMDAwMTMzOTcxMTkzCg=="


COURSE_REPORT_BYTES = ""
